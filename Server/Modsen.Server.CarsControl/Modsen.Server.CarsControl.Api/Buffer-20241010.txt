{"@timestamp":"2024-10-10T08:14:57.6274044+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:14:57.8956296+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:14:57.9132491+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {3443e789-ec0d-4e04-80ec-26be35999215} with creation date 2024-10-10 08:14:57Z, activation date 2024-10-10 08:14:57Z, and expiration date 2025-01-08 08:14:57Z.","fields":{"KeyId":"3443e789-ec0d-4e04-80ec-26be35999215","CreationDate":"2024-10-10T08:14:57.9094199+00:00","ActivationDate":"2024-10-10T08:14:57.9055439+00:00","ExpirationDate":"2025-01-08T08:14:57.9055439+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{3443e789-ec0d-4e04-80ec-26be35999215}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:14:57Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:14:57Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:14:57Z"}]}}
{"@timestamp":"2024-10-10T08:14:57.9595577+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {3443e789-ec0d-4e04-80ec-26be35999215} may be persisted to storage in unencrypted form.","fields":{"KeyId":"3443e789-ec0d-4e04-80ec-26be35999215","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{3443e789-ec0d-4e04-80ec-26be35999215}"}]}}
{"@timestamp":"2024-10-10T08:14:58.6233046+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:14:58.6259296+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:14:58.6338039+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:14:58.6372831+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:14:58.6391477+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:15:01.1896397+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPT:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIPT"}}
{"@timestamp":"2024-10-10T08:15:01.4739260+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 287.1481ms","fields":{"ElapsedMilliseconds":287.1481,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPT:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIPT"}}
{"@timestamp":"2024-10-10T08:15:02.5384008+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPT:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790EHGQIPT"}}
{"@timestamp":"2024-10-10T08:15:02.8920307+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPU:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIPU"}}
{"@timestamp":"2024-10-10T08:15:02.9582968+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 66.0427ms","fields":{"ElapsedMilliseconds":66.0427,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPU:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIPU"}}
{"@timestamp":"2024-10-10T08:15:03.2303978+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 691.9995ms","fields":{"ElapsedMilliseconds":691.9995,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPT:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790EHGQIPT"}}
{"@timestamp":"2024-10-10T08:15:06.2598732+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/css/fonts/Lato-Regular.ttf\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/css/fonts/Lato-Regular.ttf","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPV:00000001","RequestPath":"/css/fonts/Lato-Regular.ttf","ConnectionId":"0HN790EHGQIPV"}}
{"@timestamp":"2024-10-10T08:15:06.2871533+00:00","level":"Information","messageTemplate":"CORS policy execution failed.","message":"CORS policy execution failed.","fields":{"EventId":{"Id":5,"Name":"PolicyFailure"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIPV:00000001","RequestPath":"/css/fonts/Lato-Regular.ttf","ConnectionId":"0HN790EHGQIPV"}}
{"@timestamp":"2024-10-10T08:15:06.2891885+00:00","level":"Information","messageTemplate":"Request origin {origin} does not have permission to access the resource.","message":"Request origin \"https://localhost:5010\" does not have permission to access the resource.","fields":{"origin":"https://localhost:5010","EventId":{"Id":6,"Name":"OriginNotAllowed"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIPV:00000001","RequestPath":"/css/fonts/Lato-Regular.ttf","ConnectionId":"0HN790EHGQIPV"}}
{"@timestamp":"2024-10-10T08:15:06.5194463+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/css/fonts/Lato-Regular.ttf\"\"\" - 404 0 null 254.687ms","fields":{"ElapsedMilliseconds":254.687,"StatusCode":404,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/css/fonts/Lato-Regular.ttf","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPV:00000001","RequestPath":"/css/fonts/Lato-Regular.ttf","ConnectionId":"0HN790EHGQIPV"}}
{"@timestamp":"2024-10-10T08:15:06.5251096+00:00","level":"Information","messageTemplate":"Request reached the end of the middleware pipeline without being handled by application code. Request path: {Method} {Scheme}://{Host}{PathBase}{Path}, Response status code: {StatusCode}","message":"Request reached the end of the middleware pipeline without being handled by application code. Request path: \"GET\" \"https\"://\"localhost:5010\"\"\"\"/css/fonts/Lato-Regular.ttf\", Response status code: 404","fields":{"Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/css/fonts/Lato-Regular.ttf","StatusCode":404,"EventId":{"Id":16},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIPV:00000001","RequestPath":"/css/fonts/Lato-Regular.ttf","ConnectionId":"0HN790EHGQIPV"}}
{"@timestamp":"2024-10-10T08:15:10.8686621+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ0:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIQ0"}}
{"@timestamp":"2024-10-10T08:15:10.8956313+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 27.1453ms","fields":{"ElapsedMilliseconds":27.1453,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ0:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIQ0"}}
{"@timestamp":"2024-10-10T08:15:29.4151401+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.4691495+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.4955724+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.8365716+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.8479146+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.8556750+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 354.8346ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":354.8346,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.8571206+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:29.8596146+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 444.5269ms","fields":{"ElapsedMilliseconds":444.5269,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ1"}}
{"@timestamp":"2024-10-10T08:15:30.6502852+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6581503+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6603110+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6697397+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6724548+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6753012+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 13.4757ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":13.4757,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6769557+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.6790559+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 28.7355ms","fields":{"ElapsedMilliseconds":28.7355,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ2"}}
{"@timestamp":"2024-10-10T08:15:30.7773414+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ3:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ3"}}
{"@timestamp":"2024-10-10T08:15:30.7798780+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ3:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ3"}}
{"@timestamp":"2024-10-10T08:15:30.7828716+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 5.4821ms","fields":{"ElapsedMilliseconds":5.4821,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ3:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ3"}}
{"@timestamp":"2024-10-10T08:15:30.7923421+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:30.7935793+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:30.8235456+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException","Message":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","Source":null,"StackTraceString":null,"RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147024809,"HelpURL":null},{"Depth":1,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenMalformedException","Message":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","Source":"Microsoft.IdentityModel.JsonWebTokens","StackTraceString":"   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken.ReadToken(String encodedJson)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebToken..ctor(String jwtEncodedString)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ReadToken(String token, TokenValidationParameters validationParameters)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147024809,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:30.9281364+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX14100: JWT is not well formed, there are no dots (.).\nThe token needs to be in JWS or JWE Compact Serialization Format. (JWS): 'EncodedHeader.EndcodedPayload.EncodedSignature'. (JWE): 'EncodedProtectedHeader.EncodedEncryptedKey.EncodedInitializationVector.EncodedCiphertext.EncodedAuthenticationTag'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:30.9294904+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:30.9306218+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:31.0295064+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:31.0307124+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:31.0323035+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 99.5032ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":99.5032,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:31.0332920+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:15:31.0346877+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 242.3562ms","fields":{"ElapsedMilliseconds":242.3562,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ4"}}
{"@timestamp":"2024-10-10T08:16:00.4070731+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ5"}}
{"@timestamp":"2024-10-10T08:16:00.4089782+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ5"}}
{"@timestamp":"2024-10-10T08:16:00.4105543+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 3.3101ms","fields":{"ElapsedMilliseconds":3.3101,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ5"}}
{"@timestamp":"2024-10-10T08:16:00.4283679+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.4297704+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.4739951+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.4804112+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.5146619+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.5157705+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.5168421+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 34.8884ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":34.8884,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.5177388+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.5186890+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 90.2486ms","fields":{"ElapsedMilliseconds":90.2486,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ6:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQ6"}}
{"@timestamp":"2024-10-10T08:16:00.9715117+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ7"}}
{"@timestamp":"2024-10-10T08:16:00.9732559+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ7"}}
{"@timestamp":"2024-10-10T08:16:00.9741663+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 2.7049ms","fields":{"ElapsedMilliseconds":2.7049,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ7"}}
{"@timestamp":"2024-10-10T08:16:01.0354201+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0364555+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0381248+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0423283+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0687009+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0699811+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0709550+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 27.179ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":27.179,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0717153+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.0724519+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 36.9847ms","fields":{"ElapsedMilliseconds":36.9847,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQ8"}}
{"@timestamp":"2024-10-10T08:16:01.4208092+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ9"}}
{"@timestamp":"2024-10-10T08:16:01.4223189+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQ9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ9"}}
{"@timestamp":"2024-10-10T08:16:01.4236470+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 2.8178ms","fields":{"ElapsedMilliseconds":2.8178,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQ9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQ9"}}
{"@timestamp":"2024-10-10T08:16:01.4524272+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.4535021+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.4546700+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.4555590+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.4853561+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.5093534+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.5119302+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 55.1131ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":55.1131,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.5127550+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:01.5135363+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 61.0902ms","fields":{"ElapsedMilliseconds":61.0902,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQA"}}
{"@timestamp":"2024-10-10T08:16:10.2971255+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQB:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQB"}}
{"@timestamp":"2024-10-10T08:16:10.2979169+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQB:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQB"}}
{"@timestamp":"2024-10-10T08:16:10.2988061+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 1.6684ms","fields":{"ElapsedMilliseconds":1.6684,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQB:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQB"}}
{"@timestamp":"2024-10-10T08:16:10.3052052+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundary6BCmouulMTa2mun9\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundary6BCmouulMTa2mun9","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.3061879+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.3118623+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.3177112+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.4407433+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.RentCarService","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.5254120+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:16:10.5289271+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:16:10.5828681+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.7167326+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\" in 398.0063ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":398.0063,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.7187797+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:10.8722487+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 567.0254ms","fields":{"ElapsedMilliseconds":567.0254,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQC:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQC"}}
{"@timestamp":"2024-10-10T08:16:30.7980950+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8000705+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8014934+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8252305+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8350743+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8359719+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 32.2275ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":32.2275,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8367965+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:30.8376545+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - 200 null \"text/plain; charset=utf-8\" 39.672ms","fields":{"ElapsedMilliseconds":39.672,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQD:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQD"}}
{"@timestamp":"2024-10-10T08:16:31.1274052+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.1292337+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.1301793+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.1855715+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.2092042+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.2111520+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 79.3818ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":79.3818,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.2129502+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:31.2346049+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - 200 null \"text/plain; charset=utf-8\" 107.1845ms","fields":{"ElapsedMilliseconds":107.1845,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQE:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQE"}}
{"@timestamp":"2024-10-10T08:16:43.8724172+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQF:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQF"}}
{"@timestamp":"2024-10-10T08:16:43.8733905+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQF:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQF"}}
{"@timestamp":"2024-10-10T08:16:43.8743113+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 1.8846ms","fields":{"ElapsedMilliseconds":1.8846,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQF:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQF"}}
{"@timestamp":"2024-10-10T08:16:43.9269627+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryoSa0TBdSWLzV9Gb6\" 986749","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryoSa0TBdSWLzV9Gb6","ContentLength":986749,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:43.9287195+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:43.9313166+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:43.9323007+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:44.1105964+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.RentCarService","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:44.1581120+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:16:44.1605067+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:16:44.1713156+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"31251370-9e4e-42ef-b0c8-9706136d1c32","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:44.2692279+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\" in 336.1602ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":336.1602,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:44.2702793+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:16:44.3408634+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 413.8873ms","fields":{"ElapsedMilliseconds":413.8873,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=New&Description=New%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQG:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQG"}}
{"@timestamp":"2024-10-10T08:17:57.8337658+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQH:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIQH"}}
{"@timestamp":"2024-10-10T08:17:57.8669062+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 33.8698ms","fields":{"ElapsedMilliseconds":33.8698,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQH:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIQH"}}
{"@timestamp":"2024-10-10T08:17:58.2371638+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQI:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIQI"}}
{"@timestamp":"2024-10-10T08:17:58.3266283+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQH:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790EHGQIQH"}}
{"@timestamp":"2024-10-10T08:17:58.3366409+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 99.1854ms","fields":{"ElapsedMilliseconds":99.1854,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQI:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790EHGQIQI"}}
{"@timestamp":"2024-10-10T08:17:58.3451183+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 18.4862ms","fields":{"ElapsedMilliseconds":18.4862,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQH:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790EHGQIQH"}}
{"@timestamp":"2024-10-10T08:18:22.7285612+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQJ"}}
{"@timestamp":"2024-10-10T08:18:22.7296697+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQJ"}}
{"@timestamp":"2024-10-10T08:18:22.7312845+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 2.7132ms","fields":{"ElapsedMilliseconds":2.7132,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQJ"}}
{"@timestamp":"2024-10-10T08:18:22.7390837+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.7403050+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.7438511+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:16:57', Current time (UTC): '10/10/2024 08:18:22'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.7500885+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:16:57', Current time (UTC): '10/10/2024 08:18:22'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:16:57', Current time (UTC): '10/10/2024 08:18:22'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.7509445+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.7518565+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.7821588+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.8066683+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.8089772+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 56.1926ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":56.1926,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.8098805+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:22.8106671+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 71.5701ms","fields":{"ElapsedMilliseconds":71.5701,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQK"}}
{"@timestamp":"2024-10-10T08:18:23.9813199+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQL:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQL"}}
{"@timestamp":"2024-10-10T08:18:23.9824036+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQL:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQL"}}
{"@timestamp":"2024-10-10T08:18:23.9837337+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 2.3989ms","fields":{"ElapsedMilliseconds":2.3989,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQL:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQL"}}
{"@timestamp":"2024-10-10T08:18:23.9916937+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:23.9927320+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:23.9944591+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:16:57', Current time (UTC): '10/10/2024 08:18:23'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:23.9959365+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:16:57', Current time (UTC): '10/10/2024 08:18:23'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:16:57', Current time (UTC): '10/10/2024 08:18:23'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:23.9986509+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:24.0060715+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:24.0070103+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 401 0 null 15.2991ms","fields":{"ElapsedMilliseconds":15.2991,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQM:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQM"}}
{"@timestamp":"2024-10-10T08:18:24.1801100+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.1810726+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.1826302+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.1835889+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.2141049+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.2166055+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.2189257+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 33.5179ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":33.5179,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.2201452+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:24.2209595+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 40.8382ms","fields":{"ElapsedMilliseconds":40.8382,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQN:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQN"}}
{"@timestamp":"2024-10-10T08:18:26.0804605+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0820073+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0840682+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0850031+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0920927+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0929847+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0943505+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 8.4794ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":8.4794,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0951820+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.0958763+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 15.416ms","fields":{"ElapsedMilliseconds":15.416,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQO:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQO"}}
{"@timestamp":"2024-10-10T08:18:26.4503671+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4514153+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4525999+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4534511+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4586913+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4597127+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4606869+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 5.7991ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":5.7991,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4614813+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:26.4623240+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 11.9338ms","fields":{"ElapsedMilliseconds":11.9338,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQP:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQP"}}
{"@timestamp":"2024-10-10T08:18:28.7466780+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.7481580+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.7495964+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.7506003+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.7589375+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.8038165+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"fb41e2d9-ba40-4206-864c-c2bd54c8280e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.8053173+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 53.8477ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":53.8477,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.8060351+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:28.8067990+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 60.1058ms","fields":{"ElapsedMilliseconds":60.1058,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQQ:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790EHGQIQQ"}}
{"@timestamp":"2024-10-10T08:18:29.2353141+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQR"}}
{"@timestamp":"2024-10-10T08:18:29.2370386+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQR"}}
{"@timestamp":"2024-10-10T08:18:29.2387962+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 3.4697ms","fields":{"ElapsedMilliseconds":3.4697,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQR"}}
{"@timestamp":"2024-10-10T08:18:29.2459948+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.2470532+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.2481536+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.2489959+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.2783610+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.3013050+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.3056742+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 55.7704ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":55.7704,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.3067216+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.3078434+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 61.7964ms","fields":{"ElapsedMilliseconds":61.7964,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIQS"}}
{"@timestamp":"2024-10-10T08:18:29.5366496+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQT"}}
{"@timestamp":"2024-10-10T08:18:29.5379632+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQT"}}
{"@timestamp":"2024-10-10T08:18:29.5397020+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.025ms","fields":{"ElapsedMilliseconds":3.025,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQT"}}
{"@timestamp":"2024-10-10T08:18:29.5460806+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5470069+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5481446+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5490095+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5579134+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5817955+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5827940+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 33.0355ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":33.0355,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5836464+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:29.5849150+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 38.8137ms","fields":{"ElapsedMilliseconds":38.8137,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIQU"}}
{"@timestamp":"2024-10-10T08:18:31.6588772+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQV:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIQV"}}
{"@timestamp":"2024-10-10T08:18:31.6600973+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIQV:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIQV"}}
{"@timestamp":"2024-10-10T08:18:31.6641985+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - 204 null null 5.0008ms","fields":{"ElapsedMilliseconds":5.0008,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIQV:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIQV"}}
{"@timestamp":"2024-10-10T08:18:31.6908110+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.6921530+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.6941596+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.7034932+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.7280918+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.7292041+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.7302449+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 25.0585ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":25.0585,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.7313603+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:31.7324804+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - 200 null \"text/plain; charset=utf-8\" 41.6471ms","fields":{"ElapsedMilliseconds":41.6471,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR0:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIR0"}}
{"@timestamp":"2024-10-10T08:18:34.9781926+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR1"}}
{"@timestamp":"2024-10-10T08:18:34.9803487+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR1"}}
{"@timestamp":"2024-10-10T08:18:34.9816067+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.4067ms","fields":{"ElapsedMilliseconds":3.4067,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR1"}}
{"@timestamp":"2024-10-10T08:18:34.9890229+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:34.9898427+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:34.9909439+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:34.9919208+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:35.0199508+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:35.0431841+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:35.0453037+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 51.8219ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":51.8219,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:35.0464661+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:35.0474455+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 58.4092ms","fields":{"ElapsedMilliseconds":58.4092,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR2"}}
{"@timestamp":"2024-10-10T08:18:35.8111933+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR3:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR3"}}
{"@timestamp":"2024-10-10T08:18:35.8134313+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR3:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR3"}}
{"@timestamp":"2024-10-10T08:18:35.8147775+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - 204 null null 3.5718ms","fields":{"ElapsedMilliseconds":3.5718,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR3:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR3"}}
{"@timestamp":"2024-10-10T08:18:35.8212196+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8221049+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8232357+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8242451+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8387732+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8628431+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8639878+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 38.528ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":38.528,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8649807+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:35.8656888+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - 200 null \"text/plain; charset=utf-8\" 44.4464ms","fields":{"ElapsedMilliseconds":44.4464,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR4:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR4"}}
{"@timestamp":"2024-10-10T08:18:36.7694026+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.7704480+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.7720727+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.7731618+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.8233663+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.8264137+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.8494532+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 75.4048ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":75.4048,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.8709082+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:36.8721530+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 102.7284ms","fields":{"ElapsedMilliseconds":102.7284,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR5"}}
{"@timestamp":"2024-10-10T08:18:37.5859677+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.5880038+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.5901140+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.5915836+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.6657410+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.6692820+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.6710740+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 75.2772ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":75.2772,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.6722645+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:37.6733420+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - 200 null \"text/plain; charset=utf-8\" 87.3687ms","fields":{"ElapsedMilliseconds":87.3687,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR6:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR6"}}
{"@timestamp":"2024-10-10T08:18:38.4828560+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR7:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR7"}}
{"@timestamp":"2024-10-10T08:18:38.4836395+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR7:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR7"}}
{"@timestamp":"2024-10-10T08:18:38.4844626+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - 204 null null 1.6ms","fields":{"ElapsedMilliseconds":1.6,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR7:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR7"}}
{"@timestamp":"2024-10-10T08:18:38.4908908+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.4916857+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.4928659+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.4981497+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.6349450+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:18:38.6364078+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:18:38.6648260+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.7572430+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 258.3031ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":258.3031,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.7588659+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:38.8173763+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d4a9e67b892b80c9184\"\"\" - 500 null \"application/json\" 326.4803ms","fields":{"ElapsedMilliseconds":326.4803,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d4a9e67b892b80c9184","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR8:00000001","RequestPath":"/api/cars/rent/67078d4a9e67b892b80c9184","ConnectionId":"0HN790EHGQIR8"}}
{"@timestamp":"2024-10-10T08:18:44.8193458+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR9"}}
{"@timestamp":"2024-10-10T08:18:44.8202727+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIR9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR9"}}
{"@timestamp":"2024-10-10T08:18:44.8211902+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 1.844ms","fields":{"ElapsedMilliseconds":1.844,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIR9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIR9"}}
{"@timestamp":"2024-10-10T08:18:44.8280933+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8293637+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8302486+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8310683+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8803748+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8834236+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"39c4b1fe-7137-45c1-a7b7-873c15f35100","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8852082+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 53.3961ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":53.3961,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8873225+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:44.8880820+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 59.9787ms","fields":{"ElapsedMilliseconds":59.9787,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790EHGQIRA"}}
{"@timestamp":"2024-10-10T08:18:56.5742137+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRB:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRB"}}
{"@timestamp":"2024-10-10T08:18:56.5752727+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRB:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRB"}}
{"@timestamp":"2024-10-10T08:18:56.5765905+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - 204 null null 2.3731ms","fields":{"ElapsedMilliseconds":2.3731,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRB:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRB"}}
{"@timestamp":"2024-10-10T08:18:56.5849691+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.5866367+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.5883323+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.5895799+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.6167383+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.6178372+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b25faafa-6f85-4e08-9fc9-76c28466a32d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.6195432+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 28.3832ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":28.3832,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.6203235+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:56.6212092+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - 200 null \"text/plain; charset=utf-8\" 36.2208ms","fields":{"ElapsedMilliseconds":36.2208,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRC:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRC"}}
{"@timestamp":"2024-10-10T08:18:57.5191142+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRD:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRD"}}
{"@timestamp":"2024-10-10T08:18:57.5199944+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRD:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRD"}}
{"@timestamp":"2024-10-10T08:18:57.5209497+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - 204 null null 1.8316ms","fields":{"ElapsedMilliseconds":1.8316,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRD:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRD"}}
{"@timestamp":"2024-10-10T08:18:57.5478392+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.5487441+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.5498390+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.5507154+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.5904331+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:18:57.5917066+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:18:57.6086451+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b305406e-b7b6-45c7-90e2-0ded84a9f271","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.7154947+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 164.0175ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":164.0175,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.7166993+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:18:57.7640400+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078d6c9e67b892b80c9185\"\"\" - 500 null \"application/json\" 216.1933ms","fields":{"ElapsedMilliseconds":216.1933,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078d6c9e67b892b80c9185","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRE:00000001","RequestPath":"/api/cars/rent/67078d6c9e67b892b80c9185","ConnectionId":"0HN790EHGQIRE"}}
{"@timestamp":"2024-10-10T08:19:02.6864896+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRF"}}
{"@timestamp":"2024-10-10T08:19:02.6880058+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRF"}}
{"@timestamp":"2024-10-10T08:19:02.6891864+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 2.6984ms","fields":{"ElapsedMilliseconds":2.6984,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRF"}}
{"@timestamp":"2024-10-10T08:19:02.6960879+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.6970425+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.6981954+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.6990573+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.7094171+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.7334376+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"265da66b-fcbb-4841-b4e3-a828522db24b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.7370824+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 36.6527ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":36.6527,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.7378972+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:02.7386327+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 42.536ms","fields":{"ElapsedMilliseconds":42.536,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRG"}}
{"@timestamp":"2024-10-10T08:19:15.3590551+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRH"}}
{"@timestamp":"2024-10-10T08:19:15.3604792+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRH"}}
{"@timestamp":"2024-10-10T08:19:15.3613947+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.335ms","fields":{"ElapsedMilliseconds":2.335,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRH"}}
{"@timestamp":"2024-10-10T08:19:15.3679835+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryvq6nw3EZdqIQj9RE\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryvq6nw3EZdqIQj9RE","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.3687203+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.3699227+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.3751433+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"3dc0efc3-b9c9-4d0e-a71b-3361015ac9d0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.4144361+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ElectionsCarService","ActionId":"3dc0efc3-b9c9-4d0e-a71b-3361015ac9d0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.4187213+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"3dc0efc3-b9c9-4d0e-a71b-3361015ac9d0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:19:15.4194482+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"3dc0efc3-b9c9-4d0e-a71b-3361015ac9d0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:19:15.4272983+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"3dc0efc3-b9c9-4d0e-a71b-3361015ac9d0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.5150359+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\" in 138.5383ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":138.5383,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.5161257+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:19:15.5627154+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 194.71ms","fields":{"ElapsedMilliseconds":194.71,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790EHGQIRI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790EHGQIRI"}}
{"@timestamp":"2024-10-10T08:23:34.6310338+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:23:34.7386228+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:23:34.7592850+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {1ae30c0b-ddaf-409f-8fed-94bac7433f0c} with creation date 2024-10-10 08:23:34Z, activation date 2024-10-10 08:23:34Z, and expiration date 2025-01-08 08:23:34Z.","fields":{"KeyId":"1ae30c0b-ddaf-409f-8fed-94bac7433f0c","CreationDate":"2024-10-10T08:23:34.7543098+00:00","ActivationDate":"2024-10-10T08:23:34.7496523+00:00","ExpirationDate":"2025-01-08T08:23:34.7496523+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{1ae30c0b-ddaf-409f-8fed-94bac7433f0c}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:23:34Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:23:34Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:23:34Z"}]}}
{"@timestamp":"2024-10-10T08:23:34.7829956+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {1ae30c0b-ddaf-409f-8fed-94bac7433f0c} may be persisted to storage in unencrypted form.","fields":{"KeyId":"1ae30c0b-ddaf-409f-8fed-94bac7433f0c","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{1ae30c0b-ddaf-409f-8fed-94bac7433f0c}"}]}}
{"@timestamp":"2024-10-10T08:23:35.1220659+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:23:35.1508663+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:23:35.1537378+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:23:35.1549409+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:23:35.1557465+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:23:35.5509064+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDG:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFDG"}}
{"@timestamp":"2024-10-10T08:23:35.7326622+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 184.7314ms","fields":{"ElapsedMilliseconds":184.7314,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDG:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFDG"}}
{"@timestamp":"2024-10-10T08:23:36.1340853+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDH:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFDH"}}
{"@timestamp":"2024-10-10T08:23:36.1445711+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 10.3949ms","fields":{"ElapsedMilliseconds":10.3949,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDH:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFDH"}}
{"@timestamp":"2024-10-10T08:23:36.1780079+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDG:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790JAQVFDG"}}
{"@timestamp":"2024-10-10T08:23:36.3459048+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 168.3324ms","fields":{"ElapsedMilliseconds":168.3324,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDG:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790JAQVFDG"}}
{"@timestamp":"2024-10-10T08:23:52.5345693+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDI:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDI"}}
{"@timestamp":"2024-10-10T08:23:52.6282885+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDI:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDI"}}
{"@timestamp":"2024-10-10T08:23:52.6527987+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDI:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDI"}}
{"@timestamp":"2024-10-10T08:23:52.6922979+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 33.8863ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":33.8863,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDI:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDI"}}
{"@timestamp":"2024-10-10T08:23:52.6939094+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDI:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDI"}}
{"@timestamp":"2024-10-10T08:23:52.8266945+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 292.1123ms","fields":{"ElapsedMilliseconds":292.1123,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDI:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDI"}}
{"@timestamp":"2024-10-10T08:23:53.3866158+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDJ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDJ"}}
{"@timestamp":"2024-10-10T08:23:53.3925619+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDJ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDJ"}}
{"@timestamp":"2024-10-10T08:23:53.3941244+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDJ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDJ"}}
{"@timestamp":"2024-10-10T08:23:53.3986202+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 2.2077ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":2.2077,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDJ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDJ"}}
{"@timestamp":"2024-10-10T08:23:53.4000907+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDJ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDJ"}}
{"@timestamp":"2024-10-10T08:23:53.4338186+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 47.1591ms","fields":{"ElapsedMilliseconds":47.1591,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDJ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDJ"}}
{"@timestamp":"2024-10-10T08:23:53.4726957+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDK"}}
{"@timestamp":"2024-10-10T08:23:53.4762548+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDK"}}
{"@timestamp":"2024-10-10T08:23:53.4812087+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 8.5235ms","fields":{"ElapsedMilliseconds":8.5235,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDK"}}
{"@timestamp":"2024-10-10T08:23:53.4892999+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.4908159+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.5434877+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:19:31', Current time (UTC): '10/10/2024 08:23:53'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.5842909+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:19:31', Current time (UTC): '10/10/2024 08:23:53'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:19:31', Current time (UTC): '10/10/2024 08:23:53'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.5855843+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.5866246+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.5885689+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 1.1455ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":1.1455,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.5898987+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:53.6125592+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 123.2674ms","fields":{"ElapsedMilliseconds":123.2674,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDL"}}
{"@timestamp":"2024-10-10T08:23:56.9364643+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDM:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDM"}}
{"@timestamp":"2024-10-10T08:23:56.9376402+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDM:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDM"}}
{"@timestamp":"2024-10-10T08:23:56.9388268+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.2759ms","fields":{"ElapsedMilliseconds":2.2759,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDM:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDM"}}
{"@timestamp":"2024-10-10T08:23:56.9455151+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryOaiXH1H1cCuLCOKQ\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryOaiXH1H1cCuLCOKQ","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:56.9465878+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:56.9520254+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:19:31', Current time (UTC): '10/10/2024 08:23:56'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:56.9536967+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:19:31', Current time (UTC): '10/10/2024 08:23:56'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:19:31', Current time (UTC): '10/10/2024 08:23:56'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:56.9603865+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:56.9651999+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:56.9665593+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 401 0 null 21.0158ms","fields":{"ElapsedMilliseconds":21.0158,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDN"}}
{"@timestamp":"2024-10-10T08:23:59.3109976+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryYcbXcAGfTFbbhwpM\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryYcbXcAGfTFbbhwpM","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:23:59.3129195+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:23:59.3257157+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:23:59.3372256+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1a836a86-261e-4e7c-891a-1cadb97a1470","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:23:59.3392037+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\" in 0.8735ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.8735,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:23:59.3403184+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:23:59.3631083+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 52.0946ms","fields":{"ElapsedMilliseconds":52.0946,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDO"}}
{"@timestamp":"2024-10-10T08:24:08.0913373+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDP"}}
{"@timestamp":"2024-10-10T08:24:08.0927331+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDP"}}
{"@timestamp":"2024-10-10T08:24:08.0942862+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 2.9234ms","fields":{"ElapsedMilliseconds":2.9234,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDP"}}
{"@timestamp":"2024-10-10T08:24:08.1038667+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:08.1049943+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:08.1067287+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:08.1086556+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:08.1102392+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 0.723ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.723,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:08.1113900+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:08.1421926+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 38.3127ms","fields":{"ElapsedMilliseconds":38.3127,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDQ"}}
{"@timestamp":"2024-10-10T08:24:17.0011228+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDR"}}
{"@timestamp":"2024-10-10T08:24:17.0029432+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDR"}}
{"@timestamp":"2024-10-10T08:24:17.0037719+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDR"}}
{"@timestamp":"2024-10-10T08:24:17.0050759+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 0.5057ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.5057,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDR"}}
{"@timestamp":"2024-10-10T08:24:17.0064119+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDR"}}
{"@timestamp":"2024-10-10T08:24:17.0254302+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 24.2984ms","fields":{"ElapsedMilliseconds":24.2984,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDR"}}
{"@timestamp":"2024-10-10T08:24:17.6542144+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDS"}}
{"@timestamp":"2024-10-10T08:24:17.6571263+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDS"}}
{"@timestamp":"2024-10-10T08:24:17.6595742+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDS"}}
{"@timestamp":"2024-10-10T08:24:17.6625293+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 1.0371ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":1.0371,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDS"}}
{"@timestamp":"2024-10-10T08:24:17.6644471+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDS"}}
{"@timestamp":"2024-10-10T08:24:17.7021143+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 47.8911ms","fields":{"ElapsedMilliseconds":47.8911,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDS"}}
{"@timestamp":"2024-10-10T08:24:17.7928145+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDT"}}
{"@timestamp":"2024-10-10T08:24:17.7943157+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDT"}}
{"@timestamp":"2024-10-10T08:24:17.7960906+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.2639ms","fields":{"ElapsedMilliseconds":3.2639,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDT"}}
{"@timestamp":"2024-10-10T08:24:17.8142735+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:17.8230359+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:17.8255837+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:17.8272154+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:17.8303440+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 0.9918ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.9918,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:17.8318891+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:17.8660540+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 51.7604ms","fields":{"ElapsedMilliseconds":51.7604,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDU:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFDU"}}
{"@timestamp":"2024-10-10T08:24:30.1958742+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDV:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFDV"}}
{"@timestamp":"2024-10-10T08:24:30.2292189+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 33.0767ms","fields":{"ElapsedMilliseconds":33.0767,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDV:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFDV"}}
{"@timestamp":"2024-10-10T08:24:30.4201171+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE0:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFE0"}}
{"@timestamp":"2024-10-10T08:24:30.4476014+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 27.4551ms","fields":{"ElapsedMilliseconds":27.4551,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE0:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790JAQVFE0"}}
{"@timestamp":"2024-10-10T08:24:30.4523532+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDV:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790JAQVFDV"}}
{"@timestamp":"2024-10-10T08:24:30.4650783+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 13.182ms","fields":{"ElapsedMilliseconds":13.182,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFDV:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790JAQVFDV"}}
{"@timestamp":"2024-10-10T08:24:33.1682347+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE1"}}
{"@timestamp":"2024-10-10T08:24:33.1694651+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE1"}}
{"@timestamp":"2024-10-10T08:24:33.1703776+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFE1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE1"}}
{"@timestamp":"2024-10-10T08:24:33.1719112+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 0.6362ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.6362,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFE1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE1"}}
{"@timestamp":"2024-10-10T08:24:33.1730031+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE1"}}
{"@timestamp":"2024-10-10T08:24:33.2049090+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 36.6603ms","fields":{"ElapsedMilliseconds":36.6603,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE1"}}
{"@timestamp":"2024-10-10T08:24:33.8864705+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE2"}}
{"@timestamp":"2024-10-10T08:24:33.8879999+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE2"}}
{"@timestamp":"2024-10-10T08:24:33.8893961+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE2"}}
{"@timestamp":"2024-10-10T08:24:33.8912966+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 0.8327ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.8327,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE2"}}
{"@timestamp":"2024-10-10T08:24:33.8941587+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE2"}}
{"@timestamp":"2024-10-10T08:24:33.9258362+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 39.2933ms","fields":{"ElapsedMilliseconds":39.2933,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE2"}}
{"@timestamp":"2024-10-10T08:24:33.9966540+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE3:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE3"}}
{"@timestamp":"2024-10-10T08:24:33.9994799+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFE3:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE3"}}
{"@timestamp":"2024-10-10T08:24:34.0033991+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 6.6959ms","fields":{"ElapsedMilliseconds":6.6959,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE3:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE3"}}
{"@timestamp":"2024-10-10T08:24:34.0143557+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:34.0225784+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:34.0249144+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:34.0281499+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:34.0306348+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 1.0544ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":1.0544,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:34.0325560+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:34.0775119+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 63.0267ms","fields":{"ElapsedMilliseconds":63.0267,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE4:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE4"}}
{"@timestamp":"2024-10-10T08:24:41.4347215+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE5"}}
{"@timestamp":"2024-10-10T08:24:41.4571153+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE5"}}
{"@timestamp":"2024-10-10T08:24:41.4582369+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"67150a8a-ef4d-4aae-919e-3ee8263f7641","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790JAQVFE5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE5"}}
{"@timestamp":"2024-10-10T08:24:41.4596599+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 0.6301ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":0.6301,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790JAQVFE5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE5"}}
{"@timestamp":"2024-10-10T08:24:41.4606567+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790JAQVFE5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE5"}}
{"@timestamp":"2024-10-10T08:24:41.4787745+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/rent\"\"\" - 500 null \"application/json\" 44.313ms","fields":{"ElapsedMilliseconds":44.313,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790JAQVFE5:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790JAQVFE5"}}
{"@timestamp":"2024-10-10T08:25:23.1444159+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:25:23.2188806+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:25:23.2352152+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {e673f9b9-3585-480c-bde9-3988267ba94a} with creation date 2024-10-10 08:25:23Z, activation date 2024-10-10 08:25:23Z, and expiration date 2025-01-08 08:25:23Z.","fields":{"KeyId":"e673f9b9-3585-480c-bde9-3988267ba94a","CreationDate":"2024-10-10T08:25:23.2313564+00:00","ActivationDate":"2024-10-10T08:25:23.2273665+00:00","ExpirationDate":"2025-01-08T08:25:23.2273665+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{e673f9b9-3585-480c-bde9-3988267ba94a}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:25:23Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:25:23Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:25:23Z"}]}}
{"@timestamp":"2024-10-10T08:25:23.2529658+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {e673f9b9-3585-480c-bde9-3988267ba94a} may be persisted to storage in unencrypted form.","fields":{"KeyId":"e673f9b9-3585-480c-bde9-3988267ba94a","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{e673f9b9-3585-480c-bde9-3988267ba94a}"}]}}
{"@timestamp":"2024-10-10T08:25:23.6311547+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:25:23.6329818+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:25:23.6357685+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:25:23.6370391+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:25:23.6382169+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:25:24.0007030+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEI:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:24.2201369+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 221.709ms","fields":{"ElapsedMilliseconds":221.709,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEI:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:24.6871225+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEJ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KB5ACEJ"}}
{"@timestamp":"2024-10-10T08:25:24.6950612+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 7.9268ms","fields":{"ElapsedMilliseconds":7.9268,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEJ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KB5ACEJ"}}
{"@timestamp":"2024-10-10T08:25:24.7476441+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEI:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:24.8933507+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 146.2439ms","fields":{"ElapsedMilliseconds":146.2439,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEI:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.4207070+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.5192908+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.5432690+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.7506683+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.7610120+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.7685934+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 218.3699ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":218.3699,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.7698488+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:29.7722706+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 351.5805ms","fields":{"ElapsedMilliseconds":351.5805,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEI:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEI"}}
{"@timestamp":"2024-10-10T08:25:34.3159775+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3202306+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3215470+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3434206+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3694675+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3724729+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 49.7823ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":49.7823,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3734399+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:34.3746723+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 58.7221ms","fields":{"ElapsedMilliseconds":58.7221,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEK:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEK"}}
{"@timestamp":"2024-10-10T08:25:35.0519520+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.0576483+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.0608984+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.1301021+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.1324325+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.1342803+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 66.8934ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":66.8934,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.1358194+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.1370860+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 85.1226ms","fields":{"ElapsedMilliseconds":85.1226,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEL:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEL"}}
{"@timestamp":"2024-10-10T08:25:35.1717288+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEM:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEM"}}
{"@timestamp":"2024-10-10T08:25:35.1746667+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACEM:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEM"}}
{"@timestamp":"2024-10-10T08:25:35.1809472+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 9.1221ms","fields":{"ElapsedMilliseconds":9.1221,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEM:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEM"}}
{"@timestamp":"2024-10-10T08:25:35.1912366+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.1926982+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.2610961+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:24:59', Current time (UTC): '10/10/2024 08:25:35'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3181127+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:24:59', Current time (UTC): '10/10/2024 08:25:35'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:24:59', Current time (UTC): '10/10/2024 08:25:35'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3203005+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3212005+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3512573+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3766439+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3796791+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 57.5455ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":57.5455,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3805382+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:35.3821864+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 190.9375ms","fields":{"ElapsedMilliseconds":190.9375,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEN"}}
{"@timestamp":"2024-10-10T08:25:40.8679694+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEO"}}
{"@timestamp":"2024-10-10T08:25:40.8691531+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACEO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEO"}}
{"@timestamp":"2024-10-10T08:25:40.8705055+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.4035ms","fields":{"ElapsedMilliseconds":2.4035,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEO"}}
{"@timestamp":"2024-10-10T08:25:40.8774702+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryLDeUPZbzYonCBUOq\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryLDeUPZbzYonCBUOq","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:40.8792238+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:40.8840806+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:24:59', Current time (UTC): '10/10/2024 08:25:40'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:40.8857052+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:24:59', Current time (UTC): '10/10/2024 08:25:40'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:24:59', Current time (UTC): '10/10/2024 08:25:40'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:40.8922367+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:40.8978251+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:40.8993796+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}\" - 401 0 null 21.9465ms","fields":{"ElapsedMilliseconds":21.9465,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEP"}}
{"@timestamp":"2024-10-10T08:25:43.0484618+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundary2RUjbgX542nYV3wD\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundary2RUjbgX542nYV3wD","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.0497277+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.0669436+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.0738195+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"921d17ae-9135-4cc2-9af5-4042666c4414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.1636932+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.RentCarService","ActionId":"921d17ae-9135-4cc2-9af5-4042666c4414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.2142624+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"921d17ae-9135-4cc2-9af5-4042666c4414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.3001149+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\" in 224.9742ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":224.9742,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.3013310+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:43.4376082+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 389.1299ms","fields":{"ElapsedMilliseconds":389.1299,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=k;&Description=pl,%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACEQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACEQ"}}
{"@timestamp":"2024-10-10T08:25:48.7342595+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACER:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACER"}}
{"@timestamp":"2024-10-10T08:25:48.7351962+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACER:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACER"}}
{"@timestamp":"2024-10-10T08:25:48.7365291+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 2.1412ms","fields":{"ElapsedMilliseconds":2.1412,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACER:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACER"}}
{"@timestamp":"2024-10-10T08:25:48.7457659+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.7482255+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.7500113+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.7508921+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.8740555+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.8764040+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"667565c3-5ca6-4bf0-a4bd-c9eefe122c3d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.8774119+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 125.0694ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":125.0694,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.8782887+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:25:48.8795009+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 133.6445ms","fields":{"ElapsedMilliseconds":133.6445,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KB5ACES:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KB5ACES"}}
{"@timestamp":"2024-10-10T08:26:31.7476871+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:26:31.8319781+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:26:31.8504115+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {77014ecb-77b5-420b-8ba3-c6a5e0134e19} with creation date 2024-10-10 08:26:31Z, activation date 2024-10-10 08:26:31Z, and expiration date 2025-01-08 08:26:31Z.","fields":{"KeyId":"77014ecb-77b5-420b-8ba3-c6a5e0134e19","CreationDate":"2024-10-10T08:26:31.8462256+00:00","ActivationDate":"2024-10-10T08:26:31.8417803+00:00","ExpirationDate":"2025-01-08T08:26:31.8417803+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{77014ecb-77b5-420b-8ba3-c6a5e0134e19}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:26:31Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:26:31Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:26:31Z"}]}}
{"@timestamp":"2024-10-10T08:26:31.8714854+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {77014ecb-77b5-420b-8ba3-c6a5e0134e19} may be persisted to storage in unencrypted form.","fields":{"KeyId":"77014ecb-77b5-420b-8ba3-c6a5e0134e19","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{77014ecb-77b5-420b-8ba3-c6a5e0134e19}"}]}}
{"@timestamp":"2024-10-10T08:26:32.1690763+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:26:32.1700166+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:26:32.1727561+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:26:32.1741612+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:26:32.1763694+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:26:32.5227400+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I43:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:32.7152529+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 193.6025ms","fields":{"ElapsedMilliseconds":193.6025,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I43:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:33.1398999+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I44:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KVJ0I44"}}
{"@timestamp":"2024-10-10T08:26:33.1916725+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 52.1143ms","fields":{"ElapsedMilliseconds":52.1143,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I44:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790KVJ0I44"}}
{"@timestamp":"2024-10-10T08:26:33.2219534+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I43:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:33.3834417+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 162.2171ms","fields":{"ElapsedMilliseconds":162.2171,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I43:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.4961746+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.6004877+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.6270426+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.8458951+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.8610956+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.8701953+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 236.2594ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":236.2594,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.8717806+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:38.8737132+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 377.8179ms","fields":{"ElapsedMilliseconds":377.8179,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I43:00000005","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I43"}}
{"@timestamp":"2024-10-10T08:26:45.0099130+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0136910+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0149933+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0603487+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0622107+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0642770+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 47.5996ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":47.5996,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0653891+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.0666080+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 56.7044ms","fields":{"ElapsedMilliseconds":56.7044,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I45:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I45"}}
{"@timestamp":"2024-10-10T08:26:45.8201096+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8282008+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8306573+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8548412+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8567559+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8592566+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 26.5697ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":26.5697,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8610210+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8625767+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 42.4087ms","fields":{"ElapsedMilliseconds":42.4087,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I46:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I46"}}
{"@timestamp":"2024-10-10T08:26:45.8939201+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I47:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I47"}}
{"@timestamp":"2024-10-10T08:26:45.8976285+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I47:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I47"}}
{"@timestamp":"2024-10-10T08:26:45.9060007+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 12.0118ms","fields":{"ElapsedMilliseconds":12.0118,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I47:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I47"}}
{"@timestamp":"2024-10-10T08:26:45.9278439+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:45.9307384+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.0199075+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:26:42', Current time (UTC): '10/10/2024 08:26:46'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.0832966+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:26:42', Current time (UTC): '10/10/2024 08:26:46'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:26:42', Current time (UTC): '10/10/2024 08:26:46'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.0842617+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.0853549+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.1588461+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.2019567+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.2039093+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 116.7958ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":116.7958,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.2049256+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.2060331+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 278.1742ms","fields":{"ElapsedMilliseconds":278.1742,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I48:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I48"}}
{"@timestamp":"2024-10-10T08:26:46.5421778+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I49:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I49"}}
{"@timestamp":"2024-10-10T08:26:46.5434118+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I49:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I49"}}
{"@timestamp":"2024-10-10T08:26:46.5447550+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - 204 null null 2.5611ms","fields":{"ElapsedMilliseconds":2.5611,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I49:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I49"}}
{"@timestamp":"2024-10-10T08:26:46.5562001+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.5575483+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.5596311+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:26:42', Current time (UTC): '10/10/2024 08:26:46'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.5620154+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:26:42', Current time (UTC): '10/10/2024 08:26:46'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:26:42', Current time (UTC): '10/10/2024 08:26:46'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.5636033+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.5744155+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e9e47f1b-c786-48bc-89f0-789f9c52a2cf","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.6318982+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"e9e47f1b-c786-48bc-89f0-789f9c52a2cf","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.6337116+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"e9e47f1b-c786-48bc-89f0-789f9c52a2cf","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.6350419+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 59.5269ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":59.5269,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.6359691+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:46.6371458+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - 200 null \"text/plain; charset=utf-8\" 80.9179ms","fields":{"ElapsedMilliseconds":80.9179,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4A:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4A"}}
{"@timestamp":"2024-10-10T08:26:58.8806026+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4B:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4B"}}
{"@timestamp":"2024-10-10T08:26:58.8815313+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I4B:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4B"}}
{"@timestamp":"2024-10-10T08:26:58.8833342+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - 204 null null 2.5961ms","fields":{"ElapsedMilliseconds":2.5961,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4B:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4B"}}
{"@timestamp":"2024-10-10T08:26:58.8899133+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:58.8909132+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:58.9048644+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:58.9098143+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8b3dfd23-d211-4fb2-989e-0168c571b9e2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:59.1018613+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://localhost:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://localhost:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"8b3dfd23-d211-4fb2-989e-0168c571b9e2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C","Scope":["HTTP POST https://localhost:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:26:59.1057261+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://localhost:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://localhost:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"8b3dfd23-d211-4fb2-989e-0168c571b9e2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C","Scope":["HTTP POST https://localhost:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:26:59.1614431+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid because of errors in the certificate chain: UntrustedRoot","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"8b3dfd23-d211-4fb2-989e-0168c571b9e2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:59.3334426+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 422.3801ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":422.3801,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:59.3346077+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:26:59.4775444+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/67078f871c6579e67c7464c6\"\"\" - 500 null \"application/json\" 587.6101ms","fields":{"ElapsedMilliseconds":587.6101,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/67078f871c6579e67c7464c6","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4C:00000001","RequestPath":"/api/cars/rent/67078f871c6579e67c7464c6","ConnectionId":"0HN790KVJ0I4C"}}
{"@timestamp":"2024-10-10T08:27:09.0706225+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4E:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4E"}}
{"@timestamp":"2024-10-10T08:27:09.0730582+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I4E:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4E"}}
{"@timestamp":"2024-10-10T08:27:09.0744446+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.6816ms","fields":{"ElapsedMilliseconds":3.6816,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4E:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4E"}}
{"@timestamp":"2024-10-10T08:27:09.0814551+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.0829091+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.0846386+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.0855632+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.1151557+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.1797955+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d50205e2-dbe9-49fb-9a6e-7968261c9388","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.1812312+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 94.3644ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":94.3644,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.1823379+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:27:09.1833236+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 101.864ms","fields":{"ElapsedMilliseconds":101.864,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790KVJ0I4F:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790KVJ0I4F"}}
{"@timestamp":"2024-10-10T08:30:28.9756295+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:30:29.0660603+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:30:29.0837482+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {4e2f7f2e-67a4-4799-9b2b-9cda94310dca} with creation date 2024-10-10 08:30:29Z, activation date 2024-10-10 08:30:29Z, and expiration date 2025-01-08 08:30:29Z.","fields":{"KeyId":"4e2f7f2e-67a4-4799-9b2b-9cda94310dca","CreationDate":"2024-10-10T08:30:29.0796231+00:00","ActivationDate":"2024-10-10T08:30:29.0751668+00:00","ExpirationDate":"2025-01-08T08:30:29.0751668+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{4e2f7f2e-67a4-4799-9b2b-9cda94310dca}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:30:29Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:30:29Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:30:29Z"}]}}
{"@timestamp":"2024-10-10T08:30:29.1079520+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {4e2f7f2e-67a4-4799-9b2b-9cda94310dca} may be persisted to storage in unencrypted form.","fields":{"KeyId":"4e2f7f2e-67a4-4799-9b2b-9cda94310dca","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{4e2f7f2e-67a4-4799-9b2b-9cda94310dca}"}]}}
{"@timestamp":"2024-10-10T08:30:29.4732591+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:30:29.4744597+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:30:29.4768883+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:30:29.4781127+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:30:29.4790517+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:30:29.8829846+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2H:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790N6ALP2H"}}
{"@timestamp":"2024-10-10T08:30:30.0293783+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 147.8051ms","fields":{"ElapsedMilliseconds":147.8051,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2H:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790N6ALP2H"}}
{"@timestamp":"2024-10-10T08:30:30.4639015+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2I:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790N6ALP2I"}}
{"@timestamp":"2024-10-10T08:30:30.4923466+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 33.1416ms","fields":{"ElapsedMilliseconds":33.1416,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2I:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790N6ALP2I"}}
{"@timestamp":"2024-10-10T08:30:30.5208563+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2H:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790N6ALP2H"}}
{"@timestamp":"2024-10-10T08:30:30.6683387+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 148.0635ms","fields":{"ElapsedMilliseconds":148.0635,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2H:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790N6ALP2H"}}
{"@timestamp":"2024-10-10T08:30:37.8805001+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:37.9977180+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.0233782+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.2230842+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.2339788+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.2428494+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 214.4617ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":214.4617,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.2448400+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.2470417+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 366.5894ms","fields":{"ElapsedMilliseconds":366.5894,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2J:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2J"}}
{"@timestamp":"2024-10-10T08:30:38.9381702+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9443249+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9457091+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9551382+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9592066+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9648866+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 16.6433ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":16.6433,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9714503+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:38.9732970+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 35.0578ms","fields":{"ElapsedMilliseconds":35.0578,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2K:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2K"}}
{"@timestamp":"2024-10-10T08:30:39.0349851+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2L:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2L"}}
{"@timestamp":"2024-10-10T08:30:39.0390046+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2L:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2L"}}
{"@timestamp":"2024-10-10T08:30:39.0462810+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 9.0736ms","fields":{"ElapsedMilliseconds":9.0736,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2L:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2L"}}
{"@timestamp":"2024-10-10T08:30:39.0579032+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.0599974+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.1386685+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:27:49', Current time (UTC): '10/10/2024 08:30:39'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.1994211+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:27:49', Current time (UTC): '10/10/2024 08:30:39'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:27:49', Current time (UTC): '10/10/2024 08:30:39'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2007066+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2021665+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2525817+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2560443+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2792388+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 75.9563ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":75.9563,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2802875+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:39.2813327+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 223.4064ms","fields":{"ElapsedMilliseconds":223.4064,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2M:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2M"}}
{"@timestamp":"2024-10-10T08:30:42.7915206+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2N:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2N"}}
{"@timestamp":"2024-10-10T08:30:42.7926450+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2N:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2N"}}
{"@timestamp":"2024-10-10T08:30:42.7941616+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.4876ms","fields":{"ElapsedMilliseconds":2.4876,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2N:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2N"}}
{"@timestamp":"2024-10-10T08:30:42.8028433+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryA6OR9UBZv7HZHMrw\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryA6OR9UBZv7HZHMrw","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:42.8042654+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:42.8094758+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:27:49', Current time (UTC): '10/10/2024 08:30:42'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:42.8110878+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:27:49', Current time (UTC): '10/10/2024 08:30:42'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:27:49', Current time (UTC): '10/10/2024 08:30:42'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:42.8183809+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:42.8251381+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:42.8268751+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 401 0 null 23.9946ms","fields":{"ElapsedMilliseconds":23.9946,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2O:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2O"}}
{"@timestamp":"2024-10-10T08:30:45.0671015+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryL0buEiCB7ssfrlW3\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryL0buEiCB7ssfrlW3","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.0683271+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.0861296+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.0951951+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"4e5b20ec-39b9-4cb6-bd24-a5ea793b7c12","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.2191719+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.RentCarService","ActionId":"4e5b20ec-39b9-4cb6-bd24-a5ea793b7c12","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.2667570+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"4e5b20ec-39b9-4cb6-bd24-a5ea793b7c12","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.3510944+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\" in 254.3539ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":254.3539,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.3521056+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.4871366+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 420.0328ms","fields":{"ElapsedMilliseconds":420.0328,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=as&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2P:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2P"}}
{"@timestamp":"2024-10-10T08:30:45.6440241+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2Q:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2Q"}}
{"@timestamp":"2024-10-10T08:30:45.6452727+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2Q:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2Q"}}
{"@timestamp":"2024-10-10T08:30:45.6465898+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 2.5083ms","fields":{"ElapsedMilliseconds":2.5083,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2Q:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2Q"}}
{"@timestamp":"2024-10-10T08:30:45.6550301+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.6560921+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.6581419+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.6590277+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.7196726+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.7233494+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"9091de9c-b77c-4830-84f3-0fabfa39cff2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.7246630+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 64.7658ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":64.7658,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.7257811+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:45.7277155+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 72.6861ms","fields":{"ElapsedMilliseconds":72.6861,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2R:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2R"}}
{"@timestamp":"2024-10-10T08:30:51.8631528+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2S:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2S"}}
{"@timestamp":"2024-10-10T08:30:51.8639050+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2S:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2S"}}
{"@timestamp":"2024-10-10T08:30:51.8648699+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 1.6968ms","fields":{"ElapsedMilliseconds":1.6968,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2S:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2S"}}
{"@timestamp":"2024-10-10T08:30:51.8716669+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryFmnNvxN6tDTTeley\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryFmnNvxN6tDTTeley","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:51.8728837+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:51.8749112+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:51.8756210+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"4e5b20ec-39b9-4cb6-bd24-a5ea793b7c12","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:51.8852683+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.RentCarService","ActionId":"4e5b20ec-39b9-4cb6-bd24-a5ea793b7c12","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:51.9310374+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"4e5b20ec-39b9-4cb6-bd24-a5ea793b7c12","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:52.0243430+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\" in 148.0802ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":148.0802,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:52.0255458+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:30:52.0758928+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 204.2133ms","fields":{"ElapsedMilliseconds":204.2133,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"?Name=ad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790N6ALP2T:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790N6ALP2T"}}
{"@timestamp":"2024-10-10T08:34:02.3195662+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:34:02.3918977+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:34:02.4061977+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {7400e3c9-873e-4f27-87e1-8c1c0c488f46} with creation date 2024-10-10 08:34:02Z, activation date 2024-10-10 08:34:02Z, and expiration date 2025-01-08 08:34:02Z.","fields":{"KeyId":"7400e3c9-873e-4f27-87e1-8c1c0c488f46","CreationDate":"2024-10-10T08:34:02.4029525+00:00","ActivationDate":"2024-10-10T08:34:02.4000032+00:00","ExpirationDate":"2025-01-08T08:34:02.4000032+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{7400e3c9-873e-4f27-87e1-8c1c0c488f46}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:34:02Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:34:02Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:34:02Z"}]}}
{"@timestamp":"2024-10-10T08:34:02.4271642+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {7400e3c9-873e-4f27-87e1-8c1c0c488f46} may be persisted to storage in unencrypted form.","fields":{"KeyId":"7400e3c9-873e-4f27-87e1-8c1c0c488f46","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{7400e3c9-873e-4f27-87e1-8c1c0c488f46}"}]}}
{"@timestamp":"2024-10-10T08:34:02.7500266+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:34:02.7509529+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:34:02.7534699+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:34:02.7547506+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:34:02.7558817+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:34:03.0975991+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDQ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:03.2864395+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 191.0389ms","fields":{"ElapsedMilliseconds":191.0389,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDQ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:03.7255960+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDR:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790P5S2VDR"}}
{"@timestamp":"2024-10-10T08:34:03.7879255+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDQ:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:03.7951324+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 69.4623ms","fields":{"ElapsedMilliseconds":69.4623,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDR:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790P5S2VDR"}}
{"@timestamp":"2024-10-10T08:34:03.9304134+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 142.489ms","fields":{"ElapsedMilliseconds":142.489,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDQ:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.2808904+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.3835721+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.4091721+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"142b5630-0b05-4daa-841b-b13bf97c809b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.6641035+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"142b5630-0b05-4daa-841b-b13bf97c809b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.6842993+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"142b5630-0b05-4daa-841b-b13bf97c809b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.6933985+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 277.846ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":277.846,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.6950621+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:08.6980095+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 417.3869ms","fields":{"ElapsedMilliseconds":417.3869,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDQ:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDQ"}}
{"@timestamp":"2024-10-10T08:34:18.3798475+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDS"}}
{"@timestamp":"2024-10-10T08:34:18.3834512+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDS"}}
{"@timestamp":"2024-10-10T08:34:18.3876924+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 7.8514ms","fields":{"ElapsedMilliseconds":7.8514,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDS:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDS"}}
{"@timestamp":"2024-10-10T08:34:18.3948143+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.3963722+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.4556021+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:18'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5018758+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:18'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:18'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5028611+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5084678+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"55671560-bf47-4342-9d0b-60b34c275ef2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5740626+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"55671560-bf47-4342-9d0b-60b34c275ef2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5775603+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"55671560-bf47-4342-9d0b-60b34c275ef2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5798651+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 69.9929ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":69.9929,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5806926+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.5816965+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 186.8959ms","fields":{"ElapsedMilliseconds":186.8959,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDT:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VDT"}}
{"@timestamp":"2024-10-10T08:34:18.8528296+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDU:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDU"}}
{"@timestamp":"2024-10-10T08:34:18.8552322+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VDU:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDU"}}
{"@timestamp":"2024-10-10T08:34:18.8567411+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 3.8798ms","fields":{"ElapsedMilliseconds":3.8798,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDU:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDU"}}
{"@timestamp":"2024-10-10T08:34:18.8647682+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.8656446+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.8700516+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:18'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.8713619+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:18'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:18'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.8729786+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.8741168+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"142b5630-0b05-4daa-841b-b13bf97c809b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.9061840+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"142b5630-0b05-4daa-841b-b13bf97c809b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.9286299+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"142b5630-0b05-4daa-841b-b13bf97c809b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.9305088+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 54.8897ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":54.8897,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.9319579+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:18.9328210+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 68.0539ms","fields":{"ElapsedMilliseconds":68.0539,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VDV:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790P5S2VDV"}}
{"@timestamp":"2024-10-10T08:34:19.6417219+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE0:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE0"}}
{"@timestamp":"2024-10-10T08:34:19.6433854+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE0:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE0"}}
{"@timestamp":"2024-10-10T08:34:19.6448559+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 2.997ms","fields":{"ElapsedMilliseconds":2.997,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE0:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE0"}}
{"@timestamp":"2024-10-10T08:34:19.6528806+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:19.6544134+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:19.6555625+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:19'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:19.6567336+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:19'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:19'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:19.6633323+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:19.6701120+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:19.6715725+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 401 0 null 18.6517ms","fields":{"ElapsedMilliseconds":18.6517,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE1"}}
{"@timestamp":"2024-10-10T08:34:20.2336741+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.2352209+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.2371179+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:20'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.2393563+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:20'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:31:44', Current time (UTC): '10/10/2024 08:34:20'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.2420697+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.2434552+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"55671560-bf47-4342-9d0b-60b34c275ef2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.3147934+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"55671560-bf47-4342-9d0b-60b34c275ef2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.3590607+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"55671560-bf47-4342-9d0b-60b34c275ef2","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.3607532+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 116.0929ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":116.0929,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.3616445+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:20.3632381+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 129.5547ms","fields":{"ElapsedMilliseconds":129.5547,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790P5S2VE2"}}
{"@timestamp":"2024-10-10T08:34:21.9549333+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:21.9560552+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:21.9687890+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:21.9735939+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"3a21e6af-eee3-43b8-a055-8272a43aa8b1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:22.0251894+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"3a21e6af-eee3-43b8-a055-8272a43aa8b1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:22.0500212+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"3a21e6af-eee3-43b8-a055-8272a43aa8b1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:22.0724914+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 97.4809ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":97.4809,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:22.0733900+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:22.0744264+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 119.4615ms","fields":{"ElapsedMilliseconds":119.4615,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN790P5S2VE3"}}
{"@timestamp":"2024-10-10T08:34:23.2821583+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE4:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE4"}}
{"@timestamp":"2024-10-10T08:34:23.2839288+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE4:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE4"}}
{"@timestamp":"2024-10-10T08:34:23.2857567+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - 204 null null 3.5688ms","fields":{"ElapsedMilliseconds":3.5688,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE4:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE4"}}
{"@timestamp":"2024-10-10T08:34:23.2969053+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.2982486+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3003738+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3102157+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"bb164ac7-8bc8-41af-8af5-12607592e9ca","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3948009+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"bb164ac7-8bc8-41af-8af5-12607592e9ca","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3959367+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"bb164ac7-8bc8-41af-8af5-12607592e9ca","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3969692+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 84.5798ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":84.5798,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3976364+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:23.3985512+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - 200 null \"text/plain; charset=utf-8\" 101.582ms","fields":{"ElapsedMilliseconds":101.582,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE5:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE5"}}
{"@timestamp":"2024-10-10T08:34:36.5365774+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE6:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE6"}}
{"@timestamp":"2024-10-10T08:34:36.5375413+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE6:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE6"}}
{"@timestamp":"2024-10-10T08:34:36.5387047+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - 204 null null 2.0167ms","fields":{"ElapsedMilliseconds":2.0167,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE6:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE6"}}
{"@timestamp":"2024-10-10T08:34:36.5659388+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.5667237+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.5690689+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.5739041+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b694ff5e-27ce-4350-a226-f7d3228e31a9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.7317180+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"b694ff5e-27ce-4350-a226-f7d3228e31a9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.8218976+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 246.9081ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":246.9081,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.8230245+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:34:36.9730480+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790b50268399de69ac6ae\"\"\" - 500 null \"application/json\" 407.0887ms","fields":{"ElapsedMilliseconds":407.0887,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790b50268399de69ac6ae","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790P5S2VE7:00000001","RequestPath":"/api/cars/rent/670790b50268399de69ac6ae","ConnectionId":"0HN790P5S2VE7"}}
{"@timestamp":"2024-10-10T08:38:05.1534274+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:38:05.2251738+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:38:05.2381633+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {5f0e9a6c-d263-4116-a1f0-5a71cd05153c} with creation date 2024-10-10 08:38:05Z, activation date 2024-10-10 08:38:05Z, and expiration date 2025-01-08 08:38:05Z.","fields":{"KeyId":"5f0e9a6c-d263-4116-a1f0-5a71cd05153c","CreationDate":"2024-10-10T08:38:05.2354733+00:00","ActivationDate":"2024-10-10T08:38:05.2323411+00:00","ExpirationDate":"2025-01-08T08:38:05.2323411+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{5f0e9a6c-d263-4116-a1f0-5a71cd05153c}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:38:05Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:38:05Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:38:05Z"}]}}
{"@timestamp":"2024-10-10T08:38:05.2559811+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {5f0e9a6c-d263-4116-a1f0-5a71cd05153c} may be persisted to storage in unencrypted form.","fields":{"KeyId":"5f0e9a6c-d263-4116-a1f0-5a71cd05153c","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{5f0e9a6c-d263-4116-a1f0-5a71cd05153c}"}]}}
{"@timestamp":"2024-10-10T08:38:05.5828345+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:38:05.5841139+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:38:05.5873861+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:38:05.5887267+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:38:05.5897329+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:38:05.9492099+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394U:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:06.1408061+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 192.9071ms","fields":{"ElapsedMilliseconds":192.9071,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394U:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:06.5832638+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394V:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790RE8394V"}}
{"@timestamp":"2024-10-10T08:38:06.5931683+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 9.7869ms","fields":{"ElapsedMilliseconds":9.7869,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394V:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790RE8394V"}}
{"@timestamp":"2024-10-10T08:38:06.6557609+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394U:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:06.7973238+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 141.5659ms","fields":{"ElapsedMilliseconds":141.5659,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394U:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:09.7314420+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:09.8284319+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:09.8528045+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"f0e84806-7fd4-4bb7-80ff-26aab3222b77","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:10.0690070+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"f0e84806-7fd4-4bb7-80ff-26aab3222b77","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:10.0866413+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"f0e84806-7fd4-4bb7-80ff-26aab3222b77","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:10.0935010+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 234.8103ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":234.8103,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:10.0948932+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:10.0969652+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 365.7987ms","fields":{"ElapsedMilliseconds":365.7987,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE8394U:00000005","RequestPath":"/api/cars/election","ConnectionId":"0HN790RE8394U"}}
{"@timestamp":"2024-10-10T08:38:16.9665799+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83950:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83950"}}
{"@timestamp":"2024-10-10T08:38:16.9695041+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83950:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83950"}}
{"@timestamp":"2024-10-10T08:38:16.9738523+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 7.3303ms","fields":{"ElapsedMilliseconds":7.3303,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83950:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83950"}}
{"@timestamp":"2024-10-10T08:38:17.0011033+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.0025869+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.0463780+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:17'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.0927766+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:17'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:17'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.0941497+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.0990521+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"0809ad3f-caae-4ab2-ae00-573c7e443e2c","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.1866991+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"0809ad3f-caae-4ab2-ae00-573c7e443e2c","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.1882914+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"0809ad3f-caae-4ab2-ae00-573c7e443e2c","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.1907004+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 90.9139ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":90.9139,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.1920649+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.1929577+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 191.8193ms","fields":{"ElapsedMilliseconds":191.8193,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83951:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83951"}}
{"@timestamp":"2024-10-10T08:38:17.9196811+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83952:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83952"}}
{"@timestamp":"2024-10-10T08:38:17.9209109+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83952:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83952"}}
{"@timestamp":"2024-10-10T08:38:17.9222184+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - 204 null null 2.4931ms","fields":{"ElapsedMilliseconds":2.4931,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83952:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83952"}}
{"@timestamp":"2024-10-10T08:38:17.9313329+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9332920+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9371538+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:17'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9383157+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:17'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:17'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9393500+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9450161+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"65af6284-6831-4383-b49a-d610882431c6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9757394+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"65af6284-6831-4383-b49a-d610882431c6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9773531+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"65af6284-6831-4383-b49a-d610882431c6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9785224+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\" in 32.1728ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":32.1728,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9792746+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:17.9801134+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - 200 null \"text/plain; charset=utf-8\" 48.7472ms","fields":{"ElapsedMilliseconds":48.7472,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83953:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83953"}}
{"@timestamp":"2024-10-10T08:38:19.0070380+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83954:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83954"}}
{"@timestamp":"2024-10-10T08:38:19.0083944+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83954:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83954"}}
{"@timestamp":"2024-10-10T08:38:19.0100315+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - 204 null null 2.7864ms","fields":{"ElapsedMilliseconds":2.7864,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83954:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83954"}}
{"@timestamp":"2024-10-10T08:38:19.0195995+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:19.0210124+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:19.0224305+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:19'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:19.0255947+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:19'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:35:23', Current time (UTC): '10/10/2024 08:38:19'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:19.0398004+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:19.0478669+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:19.0492110+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - 401 0 null 29.6075ms","fields":{"ElapsedMilliseconds":29.6075,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83955:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83955"}}
{"@timestamp":"2024-10-10T08:38:21.7013965+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:21.7031913+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:21.7154113+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:21.7193453+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"2079b7f0-6f5c-4ae0-aa60-49d77b431b99","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:21.9283300+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Cannot assign requested address","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"2079b7f0-6f5c-4ae0-aa60-49d77b431b99","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:22.0237772+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 303.4814ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":303.4814,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:22.0250260+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:22.1733500+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent/670790bb0268399de69ac6af\"\"\" - 500 null \"application/json\" 471.9441ms","fields":{"ElapsedMilliseconds":471.9441,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent/670790bb0268399de69ac6af","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83956:00000001","RequestPath":"/api/cars/rent/670790bb0268399de69ac6af","ConnectionId":"0HN790RE83956"}}
{"@timestamp":"2024-10-10T08:38:29.9970088+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83957:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83957"}}
{"@timestamp":"2024-10-10T08:38:29.9989333+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83957:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83957"}}
{"@timestamp":"2024-10-10T08:38:30.0003638+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.3738ms","fields":{"ElapsedMilliseconds":3.3738,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83957:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83957"}}
{"@timestamp":"2024-10-10T08:38:30.0086700+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.0095856+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.0108086+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.0116141+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"0809ad3f-caae-4ab2-ae00-573c7e443e2c","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.0815546+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"0809ad3f-caae-4ab2-ae00-573c7e443e2c","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.1070800+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"0809ad3f-caae-4ab2-ae00-573c7e443e2c","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.1090666+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 96.7159ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":96.7159,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.1097555+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:38:30.1105683+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 101.8394ms","fields":{"ElapsedMilliseconds":101.8394,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790RE83958:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790RE83958"}}
{"@timestamp":"2024-10-10T08:40:37.8573687+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:40:37.9278556+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:40:37.9402367+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {923fb4ac-fb0f-4943-86c9-21d761cd1a8d} with creation date 2024-10-10 08:40:37Z, activation date 2024-10-10 08:40:37Z, and expiration date 2025-01-08 08:40:37Z.","fields":{"KeyId":"923fb4ac-fb0f-4943-86c9-21d761cd1a8d","CreationDate":"2024-10-10T08:40:37.9375902+00:00","ActivationDate":"2024-10-10T08:40:37.9348279+00:00","ExpirationDate":"2025-01-08T08:40:37.9348279+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{923fb4ac-fb0f-4943-86c9-21d761cd1a8d}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:40:37Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:40:37Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:40:37Z"}]}}
{"@timestamp":"2024-10-10T08:40:37.9580006+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {923fb4ac-fb0f-4943-86c9-21d761cd1a8d} may be persisted to storage in unencrypted form.","fields":{"KeyId":"923fb4ac-fb0f-4943-86c9-21d761cd1a8d","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{923fb4ac-fb0f-4943-86c9-21d761cd1a8d}"}]}}
{"@timestamp":"2024-10-10T08:40:38.2615649+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:40:38.2624960+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:40:38.2650719+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:40:38.2666119+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:40:38.2675739+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:40:38.5977967+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBH:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790SRNTBBH"}}
{"@timestamp":"2024-10-10T08:40:38.7525853+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 155.7854ms","fields":{"ElapsedMilliseconds":155.7854,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBH:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790SRNTBBH"}}
{"@timestamp":"2024-10-10T08:40:39.1868791+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBI:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790SRNTBBI"}}
{"@timestamp":"2024-10-10T08:40:39.3013204+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBH:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790SRNTBBH"}}
{"@timestamp":"2024-10-10T08:40:39.3009999+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 94.0044ms","fields":{"ElapsedMilliseconds":94.0044,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBI:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790SRNTBBI"}}
{"@timestamp":"2024-10-10T08:40:39.4524269+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 151.3491ms","fields":{"ElapsedMilliseconds":151.3491,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBH:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790SRNTBBH"}}
{"@timestamp":"2024-10-10T08:40:46.4182468+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBJ"}}
{"@timestamp":"2024-10-10T08:40:46.4255983+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBJ"}}
{"@timestamp":"2024-10-10T08:40:46.4379466+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 19.7608ms","fields":{"ElapsedMilliseconds":19.7608,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBJ"}}
{"@timestamp":"2024-10-10T08:40:46.4657694+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.4690809+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.5905840+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:46'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.6385328+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:46'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:46'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.6427373+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.6671316+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"68bc5be2-7176-40be-ab16-32d4c844ae6e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.8594428+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"68bc5be2-7176-40be-ab16-32d4c844ae6e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.8713962+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"68bc5be2-7176-40be-ab16-32d4c844ae6e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.8775478+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 205.7124ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":205.7124,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.8788540+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:46.8810388+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 415.2456ms","fields":{"ElapsedMilliseconds":415.2456,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBK"}}
{"@timestamp":"2024-10-10T08:40:48.2465947+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBL:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBL"}}
{"@timestamp":"2024-10-10T08:40:48.2493408+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBL:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBL"}}
{"@timestamp":"2024-10-10T08:40:48.2508749+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - 204 null null 4.2035ms","fields":{"ElapsedMilliseconds":4.2035,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBL:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBL"}}
{"@timestamp":"2024-10-10T08:40:48.2781953+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.2797991+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.2837022+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:48'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.2851781+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:48'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:48'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.2861649+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.2920780+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"ad506fe8-32f9-4095-8c4c-801caf31a409","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.3370239+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"ad506fe8-32f9-4095-8c4c-801caf31a409","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.3385031+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"ad506fe8-32f9-4095-8c4c-801caf31a409","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.3398616+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 46.4871ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":46.4871,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.3409199+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:48.3420978+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - 200 null \"text/plain; charset=utf-8\" 63.8338ms","fields":{"ElapsedMilliseconds":63.8338,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBM:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBM"}}
{"@timestamp":"2024-10-10T08:40:49.1296273+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBN:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBN"}}
{"@timestamp":"2024-10-10T08:40:49.1319832+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBN:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBN"}}
{"@timestamp":"2024-10-10T08:40:49.1335652+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - 204 null null 3.9258ms","fields":{"ElapsedMilliseconds":3.9258,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBN:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBN"}}
{"@timestamp":"2024-10-10T08:40:49.1429498+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:49.1444951+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:49.1489131+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:49'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:49.1516528+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:49'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:39:21', Current time (UTC): '10/10/2024 08:40:49'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:49.1618380+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:49.1709109+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:49.1730703+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - 401 0 null 30.0835ms","fields":{"ElapsedMilliseconds":30.0835,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBO:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBO"}}
{"@timestamp":"2024-10-10T08:40:51.6885454+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:51.6906666+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:51.7037255+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:51.7090843+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"a97a4f27-48dd-434c-8b11-68a95c0a3aac","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:51.9594966+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"a97a4f27-48dd-434c-8b11-68a95c0a3aac","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:52.0487221+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 338.6581ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":338.6581,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:52.0505110+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:52.2103689+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67078e039e67b892b80c9186\"\"\" - 500 null \"application/json\" 521.732ms","fields":{"ElapsedMilliseconds":521.732,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67078e039e67b892b80c9186","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBP:00000001","RequestPath":"/api/cars/election/67078e039e67b892b80c9186","ConnectionId":"0HN790SRNTBBP"}}
{"@timestamp":"2024-10-10T08:40:54.4677057+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBQ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBQ"}}
{"@timestamp":"2024-10-10T08:40:54.4686239+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBQ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBQ"}}
{"@timestamp":"2024-10-10T08:40:54.4697738+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 2.0446ms","fields":{"ElapsedMilliseconds":2.0446,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBQ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBQ"}}
{"@timestamp":"2024-10-10T08:40:54.5194626+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5206004+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5223493+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5236322+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"68bc5be2-7176-40be-ab16-32d4c844ae6e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5318702+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"68bc5be2-7176-40be-ab16-32d4c844ae6e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5554451+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"68bc5be2-7176-40be-ab16-32d4c844ae6e","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5582677+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 33.6041ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":33.6041,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5593178+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:40:54.5605019+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 40.9972ms","fields":{"ElapsedMilliseconds":40.9972,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790SRNTBBR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790SRNTBBR"}}
{"@timestamp":"2024-10-10T08:41:11.5044550+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:41:11.5839998+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:41:11.5996022+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {56a72976-34b9-4526-9d6e-b68ad91d4f3a} with creation date 2024-10-10 08:41:11Z, activation date 2024-10-10 08:41:11Z, and expiration date 2025-01-08 08:41:11Z.","fields":{"KeyId":"56a72976-34b9-4526-9d6e-b68ad91d4f3a","CreationDate":"2024-10-10T08:41:11.5960922+00:00","ActivationDate":"2024-10-10T08:41:11.5925413+00:00","ExpirationDate":"2025-01-08T08:41:11.5925413+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{56a72976-34b9-4526-9d6e-b68ad91d4f3a}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:41:11Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:41:11Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:41:11Z"}]}}
{"@timestamp":"2024-10-10T08:41:11.6199171+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {56a72976-34b9-4526-9d6e-b68ad91d4f3a} may be persisted to storage in unencrypted form.","fields":{"KeyId":"56a72976-34b9-4526-9d6e-b68ad91d4f3a","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{56a72976-34b9-4526-9d6e-b68ad91d4f3a}"}]}}
{"@timestamp":"2024-10-10T08:41:11.9679441+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:41:11.9689853+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:41:11.9723990+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:41:11.9739989+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:41:11.9751004+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:41:12.2641552+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U62:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790T5P2U62"}}
{"@timestamp":"2024-10-10T08:41:12.4141653+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 150.7284ms","fields":{"ElapsedMilliseconds":150.7284,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U62:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790T5P2U62"}}
{"@timestamp":"2024-10-10T08:41:12.8250371+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U63:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790T5P2U63"}}
{"@timestamp":"2024-10-10T08:41:12.8332229+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 8.0416ms","fields":{"ElapsedMilliseconds":8.0416,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U63:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790T5P2U63"}}
{"@timestamp":"2024-10-10T08:41:12.8904197+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U62:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790T5P2U62"}}
{"@timestamp":"2024-10-10T08:41:13.0298389+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 139.4337ms","fields":{"ElapsedMilliseconds":139.4337,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U62:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790T5P2U62"}}
{"@timestamp":"2024-10-10T08:41:16.3228623+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.4218567+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.4467284+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.6336018+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.6737841+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.6799555+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 229.3754ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":229.3754,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.6814114+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:16.6839430+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 361.1003ms","fields":{"ElapsedMilliseconds":361.1003,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U64:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U64"}}
{"@timestamp":"2024-10-10T08:41:17.3181460+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3240560+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3294465+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3441556+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3495474+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3536382+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 21.8389ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":21.8389,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3592323+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.3631035+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 44.8586ms","fields":{"ElapsedMilliseconds":44.8586,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U65:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U65"}}
{"@timestamp":"2024-10-10T08:41:17.4283173+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U66:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U66"}}
{"@timestamp":"2024-10-10T08:41:17.4325735+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790T5P2U66:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U66"}}
{"@timestamp":"2024-10-10T08:41:17.4419802+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 13.6277ms","fields":{"ElapsedMilliseconds":13.6277,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U66:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U66"}}
{"@timestamp":"2024-10-10T08:41:17.4516821+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.4529905+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.5259100+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.5269301+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.5524225+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.5951352+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d7ff3df0-f181-412c-b890-df54b8cc4fa1","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.6013728+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 73.5165ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":73.5165,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.6031591+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:17.6051402+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 153.2891ms","fields":{"ElapsedMilliseconds":153.2891,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U67:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U67"}}
{"@timestamp":"2024-10-10T08:41:20.9587061+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U68:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U68"}}
{"@timestamp":"2024-10-10T08:41:20.9605802+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790T5P2U68:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U68"}}
{"@timestamp":"2024-10-10T08:41:20.9618471+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 3.1022ms","fields":{"ElapsedMilliseconds":3.1022,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U68:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U68"}}
{"@timestamp":"2024-10-10T08:41:20.9689805+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundary4G2A4uv23kZn8MXj\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundary4G2A4uv23kZn8MXj","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:20.9703368+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:20.9796009+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:20.9855309+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"2a3c209b-62d2-4f62-a7f8-e9502c1588bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:21.0958544+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ElectionsCarService","ActionId":"2a3c209b-62d2-4f62-a7f8-e9502c1588bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:21.1503937+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"2a3c209b-62d2-4f62-a7f8-e9502c1588bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:21.2797971+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\" in 293.0057ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":293.0057,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:21.2809561+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:41:21.4229062+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 453.917ms","fields":{"ElapsedMilliseconds":453.917,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=a&Description=a%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790T5P2U69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790T5P2U69"}}
{"@timestamp":"2024-10-10T08:44:12.3674730+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:44:12.4406617+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:44:12.4537454+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {e1bdfd0e-a5fc-485d-b383-95c79d841be7} with creation date 2024-10-10 08:44:12Z, activation date 2024-10-10 08:44:12Z, and expiration date 2025-01-08 08:44:12Z.","fields":{"KeyId":"e1bdfd0e-a5fc-485d-b383-95c79d841be7","CreationDate":"2024-10-10T08:44:12.4507798+00:00","ActivationDate":"2024-10-10T08:44:12.4479197+00:00","ExpirationDate":"2025-01-08T08:44:12.4479197+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{e1bdfd0e-a5fc-485d-b383-95c79d841be7}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:44:12Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:44:12Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:44:12Z"}]}}
{"@timestamp":"2024-10-10T08:44:12.4754126+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {e1bdfd0e-a5fc-485d-b383-95c79d841be7} may be persisted to storage in unencrypted form.","fields":{"KeyId":"e1bdfd0e-a5fc-485d-b383-95c79d841be7","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{e1bdfd0e-a5fc-485d-b383-95c79d841be7}"}]}}
{"@timestamp":"2024-10-10T08:44:12.8486510+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:44:12.8497228+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:44:12.8536576+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:44:12.8551789+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:44:12.8566700+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:44:13.2086600+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P7:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790URMJ6P7"}}
{"@timestamp":"2024-10-10T08:44:13.3716319+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 163.9114ms","fields":{"ElapsedMilliseconds":163.9114,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P7:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790URMJ6P7"}}
{"@timestamp":"2024-10-10T08:44:13.7870465+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P8:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790URMJ6P8"}}
{"@timestamp":"2024-10-10T08:44:13.8150928+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 32.3376ms","fields":{"ElapsedMilliseconds":32.3376,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P8:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN790URMJ6P8"}}
{"@timestamp":"2024-10-10T08:44:13.8455106+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P7:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790URMJ6P7"}}
{"@timestamp":"2024-10-10T08:44:13.9976447+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 152.4046ms","fields":{"ElapsedMilliseconds":152.4046,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P7:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN790URMJ6P7"}}
{"@timestamp":"2024-10-10T08:44:20.5824225+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6P9"}}
{"@timestamp":"2024-10-10T08:44:20.5878747+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6P9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6P9"}}
{"@timestamp":"2024-10-10T08:44:20.5992188+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 16.7839ms","fields":{"ElapsedMilliseconds":16.7839,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6P9:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6P9"}}
{"@timestamp":"2024-10-10T08:44:20.6274980+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:20.6306218+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:20.7554456+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:20'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:20.8063285+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:20'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:20'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:20.8119344+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:20.8393135+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b8c82609-c64e-4cf6-9b73-b9f65ab1ad4a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:21.0383923+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"b8c82609-c64e-4cf6-9b73-b9f65ab1ad4a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:21.0487477+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b8c82609-c64e-4cf6-9b73-b9f65ab1ad4a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:21.0573214+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 211.6906ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":211.6906,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:21.0594847+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:21.0621176+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 434.5481ms","fields":{"ElapsedMilliseconds":434.5481,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PA:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN790URMJ6PA"}}
{"@timestamp":"2024-10-10T08:44:22.0660486+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PB:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PB"}}
{"@timestamp":"2024-10-10T08:44:22.0692909+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PB:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PB"}}
{"@timestamp":"2024-10-10T08:44:22.0706132+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 4.5162ms","fields":{"ElapsedMilliseconds":4.5162,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PB:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PB"}}
{"@timestamp":"2024-10-10T08:44:22.0773764+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.0785964+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.0819843+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:22'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.0833741+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:22'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:22'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.0854230+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.0907957+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.1478224+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.1547348+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.1561432+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 64.4831ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":64.4831,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.1573998+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:22.1583324+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 80.9175ms","fields":{"ElapsedMilliseconds":80.9175,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PC"}}
{"@timestamp":"2024-10-10T08:44:23.1229401+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.1266107+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.1276438+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.2036809+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.2048581+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.2058638+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 76.9436ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":76.9436,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.2066723+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.2075075+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 84.5252ms","fields":{"ElapsedMilliseconds":84.5252,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PD:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PD"}}
{"@timestamp":"2024-10-10T08:44:23.7121560+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.7146439+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.7164102+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.8571203+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.9187582+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.9225214+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 204.7123ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":204.7123,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.9249350+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:23.9277375+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.9288292+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:23.9300165+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 217.6487ms","fields":{"ElapsedMilliseconds":217.6487,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PE"}}
{"@timestamp":"2024-10-10T08:44:23.9317600+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:23'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:23.9351334+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:23'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:23'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:23.9363741+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:23.9376635+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:24.0705694+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:24.1160218+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:24.1178868+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 179.0265ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":179.0265,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:24.1187060+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:24.1196030+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 194.6759ms","fields":{"ElapsedMilliseconds":194.6759,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PF"}}
{"@timestamp":"2024-10-10T08:44:26.7193511+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PG:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PG"}}
{"@timestamp":"2024-10-10T08:44:26.7221089+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PG:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PG"}}
{"@timestamp":"2024-10-10T08:44:26.7239106+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 204 null null 4.5446ms","fields":{"ElapsedMilliseconds":4.5446,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PG:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PG"}}
{"@timestamp":"2024-10-10T08:44:26.7348653+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.7361341+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.7378514+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:26'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.7398418+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:26'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:26'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.7410267+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.7501471+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d235d3df-8079-4bb6-b851-057f6347ab71","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.8289203+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d235d3df-8079-4bb6-b851-057f6347ab71","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.8308298+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d235d3df-8079-4bb6-b851-057f6347ab71","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.8325559+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 81.2887ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":81.2887,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.8339460+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:26.8362734+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 200 null \"text/plain; charset=utf-8\" 101.359ms","fields":{"ElapsedMilliseconds":101.359,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PH:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PH"}}
{"@timestamp":"2024-10-10T08:44:27.9939052+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PI:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PI"}}
{"@timestamp":"2024-10-10T08:44:27.9951673+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PI:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PI"}}
{"@timestamp":"2024-10-10T08:44:27.9966663+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 204 null null 2.7718ms","fields":{"ElapsedMilliseconds":2.7718,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PI:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PI"}}
{"@timestamp":"2024-10-10T08:44:28.0066218+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:28.0076820+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:28.0111722+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:28'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:28.0130981+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:28'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:41:51', Current time (UTC): '10/10/2024 08:44:28'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:28.0228476+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:28.0301985+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:28.0312677+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 401 0 null 24.6355ms","fields":{"ElapsedMilliseconds":24.6355,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PJ:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PJ"}}
{"@timestamp":"2024-10-10T08:44:35.9756800+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PK"}}
{"@timestamp":"2024-10-10T08:44:35.9768887+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PK"}}
{"@timestamp":"2024-10-10T08:44:35.9788606+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 3.1294ms","fields":{"ElapsedMilliseconds":3.1294,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PK"}}
{"@timestamp":"2024-10-10T08:44:35.9873302+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:35.9881487+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:35.9977774+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:35.9987873+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:36.0490846+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:36.0940384+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:36.0959778+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 95.5766ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":95.5766,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:36.0966881+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:36.0973368+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 109.9424ms","fields":{"ElapsedMilliseconds":109.9424,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PL"}}
{"@timestamp":"2024-10-10T08:44:39.4098768+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PM:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PM"}}
{"@timestamp":"2024-10-10T08:44:39.4110384+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PM:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PM"}}
{"@timestamp":"2024-10-10T08:44:39.4130793+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 204 null null 3.2973ms","fields":{"ElapsedMilliseconds":3.2973,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PM:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PM"}}
{"@timestamp":"2024-10-10T08:44:39.4228610+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.4239203+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.4252862+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.4266087+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d235d3df-8079-4bb6-b851-057f6347ab71","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.4978971+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d235d3df-8079-4bb6-b851-057f6347ab71","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.5224758+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d235d3df-8079-4bb6-b851-057f6347ab71","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.5237859+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 96.4646ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":96.4646,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.5245153+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:39.5257041+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 200 null \"text/plain; charset=utf-8\" 102.815ms","fields":{"ElapsedMilliseconds":102.815,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PN:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PN"}}
{"@timestamp":"2024-10-10T08:44:47.6688179+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PO:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PO"}}
{"@timestamp":"2024-10-10T08:44:47.6696141+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PO:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PO"}}
{"@timestamp":"2024-10-10T08:44:47.6704108+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 204 null null 1.5976ms","fields":{"ElapsedMilliseconds":1.5976,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PO:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PO"}}
{"@timestamp":"2024-10-10T08:44:47.6982810+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:47.6998970+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:47.7036019+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:47.7077947+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"a03e17b5-a24c-495f-b9cf-85d9205fde63","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:47.8712028+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error connecting to subchannel.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.SocketConnectivitySubchannelTransport.TryConnectAsync(ConnectContext context, Int32 attempt)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error connecting to subchannel.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"a03e17b5-a24c-495f-b9cf-85d9205fde63","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:47.9550086+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 246.3402ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":246.3402,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:47.9565317+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:48.0905437+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079331840ead784c0682a1\"\"\" - 500 null \"application/json\" 392.2535ms","fields":{"ElapsedMilliseconds":392.2535,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079331840ead784c0682a1","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PP:00000001","RequestPath":"/api/cars/election/67079331840ead784c0682a1","ConnectionId":"0HN790URMJ6PP"}}
{"@timestamp":"2024-10-10T08:44:54.6642819+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PQ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PQ"}}
{"@timestamp":"2024-10-10T08:44:54.6655602+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PQ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PQ"}}
{"@timestamp":"2024-10-10T08:44:54.6669299+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 2.6217ms","fields":{"ElapsedMilliseconds":2.6217,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PQ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PQ"}}
{"@timestamp":"2024-10-10T08:44:54.6960540+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.6969085+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.6981191+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.6989795+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.7081938+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.7319770+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"de2debb4-5611-4de2-b910-79765019104d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.7532544+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 53.3819ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":53.3819,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.7543424+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:44:54.7553484+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 59.2472ms","fields":{"ElapsedMilliseconds":59.2472,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN790URMJ6PR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN790URMJ6PR"}}
{"@timestamp":"2024-10-10T08:48:01.6718677+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:48:01.7429337+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:48:01.7586138+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {27795f14-3560-4290-b1ff-fb714d4a3387} with creation date 2024-10-10 08:48:01Z, activation date 2024-10-10 08:48:01Z, and expiration date 2025-01-08 08:48:01Z.","fields":{"KeyId":"27795f14-3560-4290-b1ff-fb714d4a3387","CreationDate":"2024-10-10T08:48:01.7547695+00:00","ActivationDate":"2024-10-10T08:48:01.7509764+00:00","ExpirationDate":"2025-01-08T08:48:01.7509764+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{27795f14-3560-4290-b1ff-fb714d4a3387}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:48:01Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:48:01Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:48:01Z"}]}}
{"@timestamp":"2024-10-10T08:48:01.7792395+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {27795f14-3560-4290-b1ff-fb714d4a3387} may be persisted to storage in unencrypted form.","fields":{"KeyId":"27795f14-3560-4290-b1ff-fb714d4a3387","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{27795f14-3560-4290-b1ff-fb714d4a3387}"}]}}
{"@timestamp":"2024-10-10T08:48:02.1842155+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:48:02.1852760+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:48:02.1884332+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:48:02.1903035+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:48:02.1916196+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:48:02.4938409+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956R:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791101956R"}}
{"@timestamp":"2024-10-10T08:48:02.6637519+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 170.8641ms","fields":{"ElapsedMilliseconds":170.8641,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956R:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791101956R"}}
{"@timestamp":"2024-10-10T08:48:03.0789798+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956S:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791101956S"}}
{"@timestamp":"2024-10-10T08:48:03.1091034+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 30.3521ms","fields":{"ElapsedMilliseconds":30.3521,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956S:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791101956S"}}
{"@timestamp":"2024-10-10T08:48:03.1533467+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956R:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791101956R"}}
{"@timestamp":"2024-10-10T08:48:03.3482761+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 194.9118ms","fields":{"ElapsedMilliseconds":194.9118,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956R:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791101956R"}}
{"@timestamp":"2024-10-10T08:48:06.7219730+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:06.8164892+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:06.8414425+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:07.0329438+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:07.0429209+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:07.0490229+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 203.8871ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":203.8871,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:07.0505224+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:07.0522979+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 330.3681ms","fields":{"ElapsedMilliseconds":330.3681,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956T:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956T"}}
{"@timestamp":"2024-10-10T08:48:07.7193036+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7281053+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7332323+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7502388+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7538427+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7604545+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 24.249ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":24.249,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7617908+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7633352+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 44.0304ms","fields":{"ElapsedMilliseconds":44.0304,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956U:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956U"}}
{"@timestamp":"2024-10-10T08:48:07.7808291+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956V:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956V"}}
{"@timestamp":"2024-10-10T08:48:07.7851786+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791101956V:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956V"}}
{"@timestamp":"2024-10-10T08:48:07.7899756+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 9.127ms","fields":{"ElapsedMilliseconds":9.127,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791101956V:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791101956V"}}
{"@timestamp":"2024-10-10T08:48:07.8030042+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:07.8048503+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:07.8946127+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:45:29', Current time (UTC): '10/10/2024 08:48:07'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:07.9498692+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:45:29', Current time (UTC): '10/10/2024 08:48:07'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:45:29', Current time (UTC): '10/10/2024 08:48:07'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:07.9517115+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:07.9546017+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:08.0062276+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:08.0287870+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"a0feee32-6124-4c82-9adf-b38de3b07414","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:08.0523549+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 96.4314ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":96.4314,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:08.0532616+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:08.0548189+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 251.8104ms","fields":{"ElapsedMilliseconds":251.8104,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019570:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019570"}}
{"@timestamp":"2024-10-10T08:48:10.9326559+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019571:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019571"}}
{"@timestamp":"2024-10-10T08:48:10.9336735+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911019571:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019571"}}
{"@timestamp":"2024-10-10T08:48:10.9348323+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.1139ms","fields":{"ElapsedMilliseconds":2.1139,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019571:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019571"}}
{"@timestamp":"2024-10-10T08:48:10.9417255+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryqMnKRB9ezeNkwCoB\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryqMnKRB9ezeNkwCoB","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:10.9431596+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:10.9499877+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:45:29', Current time (UTC): '10/10/2024 08:48:10'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:10.9513194+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:45:29', Current time (UTC): '10/10/2024 08:48:10'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:45:29', Current time (UTC): '10/10/2024 08:48:10'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:10.9583205+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:10.9638451+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:10.9650809+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 401 0 null 23.3393ms","fields":{"ElapsedMilliseconds":23.3393,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019572:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019572"}}
{"@timestamp":"2024-10-10T08:48:13.0914639+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryOlLUMBsS48HAeoCc\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryOlLUMBsS48HAeoCc","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.0927076+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.1068760+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.1158211+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"2472d7f9-4572-4ed5-bfc6-528bd1fad247","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.2240184+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ElectionsCarService","ActionId":"2472d7f9-4572-4ed5-bfc6-528bd1fad247","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.2704998+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"2472d7f9-4572-4ed5-bfc6-528bd1fad247","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:48:13.2739527+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"2472d7f9-4572-4ed5-bfc6-528bd1fad247","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:48:13.3188505+00:00","level":"Information","messageTemplate":"Error sending message.","message":"Error sending message.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpProtocolException","Message":"The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.Http2Connection.ThrowRequestAborted(Exception innerException)\n   at System.Net.Http.Http2Connection.Http2Stream.SendDataAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.StreamExtensions.WriteMessageAsync[TMessage](Stream stream, GrpcCall call, TMessage message, Action`2 serializer, CallOptions callOptions)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146232800,"HelpURL":null}],"fields":{"EventId":{"Id":20,"Name":"ErrorSendingMessage"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"2472d7f9-4572-4ed5-bfc6-528bd1fad247","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:48:13.3368889+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError) HttpProtocolException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146232800,"HelpURL":null},{"Depth":1,"ClassName":"System.Net.Http.HttpProtocolException","Message":"The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.Http2Connection.ThrowRequestAborted(Exception innerException)\n   at System.Net.Http.Http2Connection.Http2Stream.SendDataAsync(ReadOnlyMemory`1 buffer, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.StreamExtensions.WriteMessageAsync[TMessage](Stream stream, GrpcCall call, TMessage message, Action`2 serializer, CallOptions callOptions)\n   at Grpc.Net.Client.Internal.PushUnaryContent`2.WriteMessageCore(Task writeMessageTask)\n   at System.Net.Http.Http2Connection.Http2Stream.SendRequestBodyAsync(CancellationToken cancellationToken)\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146232800,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError) HttpProtocolException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"2472d7f9-4572-4ed5-bfc6-528bd1fad247","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.4619131+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\" in 345.0642ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":345.0642,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.4630712+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:48:13.6179678+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 526.5038ms","fields":{"ElapsedMilliseconds":526.5038,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=azd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911019573:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911019573"}}
{"@timestamp":"2024-10-10T08:49:03.1861187+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:49:03.2579445+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:49:03.2706889+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {18dfec72-cb84-401e-903f-641380492336} with creation date 2024-10-10 08:49:03Z, activation date 2024-10-10 08:49:03Z, and expiration date 2025-01-08 08:49:03Z.","fields":{"KeyId":"18dfec72-cb84-401e-903f-641380492336","CreationDate":"2024-10-10T08:49:03.2676028+00:00","ActivationDate":"2024-10-10T08:49:03.2649945+00:00","ExpirationDate":"2025-01-08T08:49:03.2649945+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{18dfec72-cb84-401e-903f-641380492336}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:49:03Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:49:03Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:49:03Z"}]}}
{"@timestamp":"2024-10-10T08:49:03.2890454+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {18dfec72-cb84-401e-903f-641380492336} may be persisted to storage in unencrypted form.","fields":{"KeyId":"18dfec72-cb84-401e-903f-641380492336","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{18dfec72-cb84-401e-903f-641380492336}"}]}}
{"@timestamp":"2024-10-10T08:49:03.6591947+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:49:03.6601643+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:49:03.6633020+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:49:03.6649875+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:49:03.6661842+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:49:03.9990010+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCJ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7911IBBQCJ"}}
{"@timestamp":"2024-10-10T08:49:04.1679742+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 171.8302ms","fields":{"ElapsedMilliseconds":171.8302,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCJ:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7911IBBQCJ"}}
{"@timestamp":"2024-10-10T08:49:04.5985536+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCK:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7911IBBQCK"}}
{"@timestamp":"2024-10-10T08:49:04.6169094+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 18.3818ms","fields":{"ElapsedMilliseconds":18.3818,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCK:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7911IBBQCK"}}
{"@timestamp":"2024-10-10T08:49:04.6427038+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCJ:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7911IBBQCJ"}}
{"@timestamp":"2024-10-10T08:49:04.8565627+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 214.2782ms","fields":{"ElapsedMilliseconds":214.2782,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCJ:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7911IBBQCJ"}}
{"@timestamp":"2024-10-10T08:49:09.7156540+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCL"}}
{"@timestamp":"2024-10-10T08:49:09.7216556+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCL"}}
{"@timestamp":"2024-10-10T08:49:09.7324909+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 16.8134ms","fields":{"ElapsedMilliseconds":16.8134,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCL"}}
{"@timestamp":"2024-10-10T08:49:09.7398044+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:09.7430876+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:09.8712844+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:09.8962999+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8c462adb-bce4-461f-b48f-c2ecd73377c9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:10.1108545+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"8c462adb-bce4-461f-b48f-c2ecd73377c9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:10.1295549+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8c462adb-bce4-461f-b48f-c2ecd73377c9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:10.1371166+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 236.4058ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":236.4058,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:10.1392166+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:10.1416318+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 401.8015ms","fields":{"ElapsedMilliseconds":401.8015,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCM"}}
{"@timestamp":"2024-10-10T08:49:13.3685315+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCN"}}
{"@timestamp":"2024-10-10T08:49:13.3700965+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCN"}}
{"@timestamp":"2024-10-10T08:49:13.3719505+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.3353ms","fields":{"ElapsedMilliseconds":3.3353,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCN:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCN"}}
{"@timestamp":"2024-10-10T08:49:13.4003431+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.4018606+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.4085348+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:13'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.4534645+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:13'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:13'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.4547743+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.4601373+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.5244733+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.5478908+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.5491286+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 87.7662ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":87.7662,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.5499579+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:13.5509217+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 150.5656ms","fields":{"ElapsedMilliseconds":150.5656,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCO:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCO"}}
{"@timestamp":"2024-10-10T08:49:14.5675363+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.5712985+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.5722965+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.6467074+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.6479102+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.6492269+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 75.7812ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":75.7812,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.6500419+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:14.6507808+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 83.209ms","fields":{"ElapsedMilliseconds":83.209,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCP:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCP"}}
{"@timestamp":"2024-10-10T08:49:15.2667756+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.2681915+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.2697009+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.3287441+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.3544444+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.3566526+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.3576780+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.3600311+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 88.1993ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":88.1993,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.3621533+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:15'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.3640622+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.3694969+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:15'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:15'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.3718071+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 104.9504ms","fields":{"ElapsedMilliseconds":104.9504,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCQ:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCQ"}}
{"@timestamp":"2024-10-10T08:49:15.3745935+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.3802644+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.3934170+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.4177629+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"7898cbe0-915f-4d90-93d8-c402248467c4","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.4231689+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 40.4249ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":40.4249,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.4246378+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:15.4270722+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 74.4589ms","fields":{"ElapsedMilliseconds":74.4589,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCR:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7911IBBQCR"}}
{"@timestamp":"2024-10-10T08:49:18.5914474+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCS"}}
{"@timestamp":"2024-10-10T08:49:18.5923999+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCS"}}
{"@timestamp":"2024-10-10T08:49:18.5934461+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 1.9816ms","fields":{"ElapsedMilliseconds":1.9816,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCS"}}
{"@timestamp":"2024-10-10T08:49:18.6037864+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6051541+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6072144+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:18'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6090514+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:18'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:18'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6100076+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6108727+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8c462adb-bce4-461f-b48f-c2ecd73377c9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6413801+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"8c462adb-bce4-461f-b48f-c2ecd73377c9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6640393+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8c462adb-bce4-461f-b48f-c2ecd73377c9","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6673660+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 55.3707ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":55.3707,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6683207+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:18.6693329+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 65.5042ms","fields":{"ElapsedMilliseconds":65.5042,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7911IBBQCT"}}
{"@timestamp":"2024-10-10T08:49:20.0852336+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCU:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCU"}}
{"@timestamp":"2024-10-10T08:49:20.0865355+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCU:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCU"}}
{"@timestamp":"2024-10-10T08:49:20.0881241+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 204 null null 2.8762ms","fields":{"ElapsedMilliseconds":2.8762,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCU:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCU"}}
{"@timestamp":"2024-10-10T08:49:20.0992683+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1013154+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1031760+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:20'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1052287+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:20'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:49:13', Current time (UTC): '10/10/2024 08:49:20'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1072829+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1149020+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d0a6671a-f31a-4f97-b546-4249b0810fa5","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1985552+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d0a6671a-f31a-4f97-b546-4249b0810fa5","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.1998236+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"d0a6671a-f31a-4f97-b546-4249b0810fa5","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.2011081+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 85.2726ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":85.2726,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.2022539+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:20.2039313+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 200 null \"text/plain; charset=utf-8\" 104.6365ms","fields":{"ElapsedMilliseconds":104.6365,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQCV:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQCV"}}
{"@timestamp":"2024-10-10T08:49:26.1528569+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQD0:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD0"}}
{"@timestamp":"2024-10-10T08:49:26.1537202+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQD0:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD0"}}
{"@timestamp":"2024-10-10T08:49:26.1546930+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 204 null null 1.7433ms","fields":{"ElapsedMilliseconds":1.7433,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQD0:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD0"}}
{"@timestamp":"2024-10-10T08:49:26.1610054+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.1621648+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.1682271+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.1722299+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"058ea983-d971-47ce-a4b3-2c430fd14b94","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.3216580+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"058ea983-d971-47ce-a4b3-2c430fd14b94","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:49:26.3253818+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"058ea983-d971-47ce-a4b3-2c430fd14b94","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:49:26.3607918+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"058ea983-d971-47ce-a4b3-2c430fd14b94","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.4827889+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 309.6348ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":309.6348,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.4838999+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:49:26.6269814+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 500 null \"application/json\" 465.9661ms","fields":{"ElapsedMilliseconds":465.9661,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7911IBBQD1:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7911IBBQD1"}}
{"@timestamp":"2024-10-10T08:50:50.6332675+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:50:50.7027239+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:50:50.7145035+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {e1e13a53-fa62-43bf-927b-6f97a168c8ba} with creation date 2024-10-10 08:50:50Z, activation date 2024-10-10 08:50:50Z, and expiration date 2025-01-08 08:50:50Z.","fields":{"KeyId":"e1e13a53-fa62-43bf-927b-6f97a168c8ba","CreationDate":"2024-10-10T08:50:50.7118677+00:00","ActivationDate":"2024-10-10T08:50:50.7090342+00:00","ExpirationDate":"2025-01-08T08:50:50.7090342+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{e1e13a53-fa62-43bf-927b-6f97a168c8ba}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:50:50Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:50:50Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:50:50Z"}]}}
{"@timestamp":"2024-10-10T08:50:50.7316369+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {e1e13a53-fa62-43bf-927b-6f97a168c8ba} may be persisted to storage in unencrypted form.","fields":{"KeyId":"e1e13a53-fa62-43bf-927b-6f97a168c8ba","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{e1e13a53-fa62-43bf-927b-6f97a168c8ba}"}]}}
{"@timestamp":"2024-10-10T08:50:51.0448483+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:50:51.0457954+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:50:51.0486967+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:50:51.0499923+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:50:51.0511993+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:50:51.3716130+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE27:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7912IBPE27"}}
{"@timestamp":"2024-10-10T08:50:51.5777306+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 206.6751ms","fields":{"ElapsedMilliseconds":206.6751,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE27:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7912IBPE27"}}
{"@timestamp":"2024-10-10T08:50:51.9975511+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE28:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7912IBPE28"}}
{"@timestamp":"2024-10-10T08:50:52.0068065+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 9.2306ms","fields":{"ElapsedMilliseconds":9.2306,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE28:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7912IBPE28"}}
{"@timestamp":"2024-10-10T08:50:52.0776518+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE27:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7912IBPE27"}}
{"@timestamp":"2024-10-10T08:50:52.2206074+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 142.9702ms","fields":{"ElapsedMilliseconds":142.9702,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE27:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7912IBPE27"}}
{"@timestamp":"2024-10-10T08:50:58.7277084+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:58.8442544+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:58.8756427+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d1db1f9d-2346-46df-86f2-0b2fd55ca9c3","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:59.0810363+00:00","level":"Error","messageTemplate":"CarNotFound","message":"CarNotFound","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d1db1f9d-2346-46df-86f2-0b2fd55ca9c3","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:59.1859366+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 305.8142ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":305.8142,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:59.1881140+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:59.3526531+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 404 null \"application/json\" 625.0625ms","fields":{"ElapsedMilliseconds":625.0625,"StatusCode":404,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE29:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE29"}}
{"@timestamp":"2024-10-10T08:50:59.9342997+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:50:59.9432810+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:50:59.9465733+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d1db1f9d-2346-46df-86f2-0b2fd55ca9c3","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:50:59.9568927+00:00","level":"Error","messageTemplate":"CarNotFound","message":"CarNotFound","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d1db1f9d-2346-46df-86f2-0b2fd55ca9c3","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:51:00.1652155+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 217.1541ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":217.1541,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:51:00.1903125+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:51:00.1918629+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2B:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2B"}}
{"@timestamp":"2024-10-10T08:51:00.2513236+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2B:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2B"}}
{"@timestamp":"2024-10-10T08:51:00.2516590+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 404 null \"application/json\" 317.3955ms","fields":{"ElapsedMilliseconds":317.3955,"StatusCode":404,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2A:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2A"}}
{"@timestamp":"2024-10-10T08:51:00.2825892+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 204 null null 90.6983ms","fields":{"ElapsedMilliseconds":90.6983,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2B:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2B"}}
{"@timestamp":"2024-10-10T08:51:00.2979682+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.3000772+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.4100995+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:00'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.4828904+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:00'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:00'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.4839320+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.4862271+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"d1db1f9d-2346-46df-86f2-0b2fd55ca9c3","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.5621617+00:00","level":"Error","messageTemplate":"CarNotFound","message":"CarNotFound","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"d1db1f9d-2346-46df-86f2-0b2fd55ca9c3","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.6285166+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 141.0062ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":141.0062,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.6477123+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:00.7483771+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670794cdfb186edd170fa3e2\"\"\" - 404 null \"application/json\" 450.4072ms","fields":{"ElapsedMilliseconds":450.4072,"StatusCode":404,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670794cdfb186edd170fa3e2","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2C:00000001","RequestPath":"/api/cars/election/670794cdfb186edd170fa3e2","ConnectionId":"0HN7912IBPE2C"}}
{"@timestamp":"2024-10-10T08:51:01.3703685+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2D:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2D"}}
{"@timestamp":"2024-10-10T08:51:01.3726161+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2D:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2D"}}
{"@timestamp":"2024-10-10T08:51:01.3775822+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 7.2407ms","fields":{"ElapsedMilliseconds":7.2407,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2D:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2D"}}
{"@timestamp":"2024-10-10T08:51:01.3954440+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.3967221+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4002203+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:01'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4039695+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:01'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:01'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4052523+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4156818+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"b53e09b7-e29b-43c8-973d-df6f2e746156","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4439808+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"b53e09b7-e29b-43c8-973d-df6f2e746156","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4550340+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"b53e09b7-e29b-43c8-973d-df6f2e746156","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4583915+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 40.9832ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":40.9832,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4595808+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:01.4610894+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 65.5474ms","fields":{"ElapsedMilliseconds":65.5474,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2E:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7912IBPE2E"}}
{"@timestamp":"2024-10-10T08:51:02.4264677+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2F:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2F"}}
{"@timestamp":"2024-10-10T08:51:02.4275429+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2F:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2F"}}
{"@timestamp":"2024-10-10T08:51:02.4289284+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 2.229ms","fields":{"ElapsedMilliseconds":2.229,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2F:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2F"}}
{"@timestamp":"2024-10-10T08:51:02.4367068+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:02.4377238+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:02.4397651+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:02'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:02.4415410+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:02'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:50:22', Current time (UTC): '10/10/2024 08:51:02'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:02.4491130+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:02.4557854+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:02.4570857+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 401 0 null 20.3326ms","fields":{"ElapsedMilliseconds":20.3326,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2G:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2G"}}
{"@timestamp":"2024-10-10T08:51:07.2125849+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2H:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2H"}}
{"@timestamp":"2024-10-10T08:51:07.2136171+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2H:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2H"}}
{"@timestamp":"2024-10-10T08:51:07.2148361+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.23ms","fields":{"ElapsedMilliseconds":2.23,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2H:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2H"}}
{"@timestamp":"2024-10-10T08:51:07.2230774+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundarym3Cr8G57TCp4xEkH\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundarym3Cr8G57TCp4xEkH","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.2252435+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.2388379+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.2451403+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e322eb95-e813-4449-86f6-53fee7419084","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.3541893+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ProcessingCarService","ActionId":"e322eb95-e813-4449-86f6-53fee7419084","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.4050670+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"e322eb95-e813-4449-86f6-53fee7419084","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:51:07.4091963+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"e322eb95-e813-4449-86f6-53fee7419084","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:51:07.5569486+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: Cannot determine the frame size or a corrupted frame was received.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"Cannot determine the frame size or a corrupted frame was received.","Source":"System.Net.Security","StackTraceString":"   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)\n   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: Cannot determine the frame size or a corrupted frame was received.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"e322eb95-e813-4449-86f6-53fee7419084","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.6629702+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)\" in 417.0735ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":417.0735,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.6640491+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:51:07.7174066+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 494.3253ms","fields":{"ElapsedMilliseconds":494.3253,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"?Name=asdf&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7912IBPE2I:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7912IBPE2I"}}
{"@timestamp":"2024-10-10T08:52:44.9909844+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:52:45.0411074+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:52:45.0546474+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {f720bceb-fe84-4e0f-a14e-2a155d05e80e} with creation date 2024-10-10 08:52:45Z, activation date 2024-10-10 08:52:45Z, and expiration date 2025-01-08 08:52:45Z.","fields":{"KeyId":"f720bceb-fe84-4e0f-a14e-2a155d05e80e","CreationDate":"2024-10-10T08:52:45.0515462+00:00","ActivationDate":"2024-10-10T08:52:45.0488219+00:00","ExpirationDate":"2025-01-08T08:52:45.0488219+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{f720bceb-fe84-4e0f-a14e-2a155d05e80e}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:52:45Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:52:45Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:52:45Z"}]}}
{"@timestamp":"2024-10-10T08:52:45.0726351+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {f720bceb-fe84-4e0f-a14e-2a155d05e80e} may be persisted to storage in unencrypted form.","fields":{"KeyId":"f720bceb-fe84-4e0f-a14e-2a155d05e80e","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{f720bceb-fe84-4e0f-a14e-2a155d05e80e}"}]}}
{"@timestamp":"2024-10-10T08:52:45.3991296+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:52:45.4001132+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:52:45.4030904+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:52:45.4046015+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:52:45.4056660+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:52:45.7280590+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPCV:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7913KECPCV"}}
{"@timestamp":"2024-10-10T08:52:45.8818283+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 154.5529ms","fields":{"ElapsedMilliseconds":154.5529,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPCV:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7913KECPCV"}}
{"@timestamp":"2024-10-10T08:52:46.3424449+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD0:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7913KECPD0"}}
{"@timestamp":"2024-10-10T08:52:46.3556398+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 13.127ms","fields":{"ElapsedMilliseconds":13.127,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD0:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7913KECPD0"}}
{"@timestamp":"2024-10-10T08:52:46.3789279+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPCV:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7913KECPCV"}}
{"@timestamp":"2024-10-10T08:52:46.5279954+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 149.6346ms","fields":{"ElapsedMilliseconds":149.6346,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPCV:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7913KECPCV"}}
{"@timestamp":"2024-10-10T08:52:56.9299810+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD1"}}
{"@timestamp":"2024-10-10T08:52:56.9362283+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD1"}}
{"@timestamp":"2024-10-10T08:52:56.9470687+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 17.0672ms","fields":{"ElapsedMilliseconds":17.0672,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD1:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD1"}}
{"@timestamp":"2024-10-10T08:52:56.9548867+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:56.9578096+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:57.0802441+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:52:02', Current time (UTC): '10/10/2024 08:52:57'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:57.1300245+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:52:02', Current time (UTC): '10/10/2024 08:52:57'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:52:02', Current time (UTC): '10/10/2024 08:52:57'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:57.1405810+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:57.1482140+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:57.1509119+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 401 0 null 195.9547ms","fields":{"ElapsedMilliseconds":195.9547,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD2:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD2"}}
{"@timestamp":"2024-10-10T08:52:59.2538664+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.2560067+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.2736579+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.3040496+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"dd03419f-1fe1-4b98-9e54-395744923065","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.5336311+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"dd03419f-1fe1-4b98-9e54-395744923065","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.5492526+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"dd03419f-1fe1-4b98-9e54-395744923065","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.5547720+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 246.3017ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":246.3017,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.5560455+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:52:59.5582768+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 304.3814ms","fields":{"ElapsedMilliseconds":304.3814,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD3:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN7913KECPD3"}}
{"@timestamp":"2024-10-10T08:53:01.8509405+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD4:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD4"}}
{"@timestamp":"2024-10-10T08:53:01.8527632+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD4:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD4"}}
{"@timestamp":"2024-10-10T08:53:01.8547177+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 3.6961ms","fields":{"ElapsedMilliseconds":3.6961,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD4:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD4"}}
{"@timestamp":"2024-10-10T08:53:01.8668005+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.8681797+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.8721484+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.8807081+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e44ce52d-90a0-4cfa-a3c1-0beb46994d5d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.9333146+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"e44ce52d-90a0-4cfa-a3c1-0beb46994d5d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.9349588+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"e44ce52d-90a0-4cfa-a3c1-0beb46994d5d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.9363089+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 54.1314ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":54.1314,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.9379595+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:01.9390093+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 72.1615ms","fields":{"ElapsedMilliseconds":72.1615,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD5:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD5"}}
{"@timestamp":"2024-10-10T08:53:04.6833472+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD6:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD6"}}
{"@timestamp":"2024-10-10T08:53:04.6850671+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD6:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD6"}}
{"@timestamp":"2024-10-10T08:53:04.6870517+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.5535ms","fields":{"ElapsedMilliseconds":3.5535,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD6:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD6"}}
{"@timestamp":"2024-10-10T08:53:04.6971659+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.6988506+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.6999752+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.7068037+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"085b275e-60f8-4f68-9787-024e62ca5a91","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.7624104+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"085b275e-60f8-4f68-9787-024e62ca5a91","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.7637222+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"085b275e-60f8-4f68-9787-024e62ca5a91","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.7645890+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 57.0332ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":57.0332,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.7659854+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:04.7668612+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 69.7207ms","fields":{"ElapsedMilliseconds":69.7207,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD7:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN7913KECPD7"}}
{"@timestamp":"2024-10-10T08:53:05.2590974+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2604055+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2620991+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2629929+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"e44ce52d-90a0-4cfa-a3c1-0beb46994d5d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2713089+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"e44ce52d-90a0-4cfa-a3c1-0beb46994d5d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2752526+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"e44ce52d-90a0-4cfa-a3c1-0beb46994d5d","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2770807+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 12.8713ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":12.8713,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2779502+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:05.2788753+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 19.7145ms","fields":{"ElapsedMilliseconds":19.7145,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD8"}}
{"@timestamp":"2024-10-10T08:53:11.3204221+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD9"}}
{"@timestamp":"2024-10-10T08:53:11.3217860+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPD9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD9"}}
{"@timestamp":"2024-10-10T08:53:11.3226889+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 2.2523ms","fields":{"ElapsedMilliseconds":2.2523,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPD9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPD9"}}
{"@timestamp":"2024-10-10T08:53:11.3297363+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryfwICoeDNN6MGBsrN\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryfwICoeDNN6MGBsrN","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.3305723+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.3369502+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.3430625+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"3d221894-b5a9-4b68-99a5-881348ea61bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.4515701+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ElectionsCarService","ActionId":"3d221894-b5a9-4b68-99a5-881348ea61bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.5023473+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"3d221894-b5a9-4b68-99a5-881348ea61bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:53:11.5053716+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"3d221894-b5a9-4b68-99a5-881348ea61bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T08:53:11.6353966+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: Cannot determine the frame size or a corrupted frame was received.\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"Cannot determine the frame size or a corrupted frame was received.","Source":"System.Net.Security","StackTraceString":"   at System.Net.Security.SslStream.GetFrameSize(ReadOnlySpan`1 buffer)\n   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](CancellationToken cancellationToken, Int32 estimatedSize)\n   at System.Runtime.CompilerServices.PoolingAsyncValueTaskMethodBuilder`1.StateMachineBox`1.System.Threading.Tasks.Sources.IValueTaskSource<TResult>.GetResult(Int16 token)\n   at System.Net.Security.SslStream.ReceiveHandshakeFrameAsync[TIOAdapter](CancellationToken cancellationToken)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: Cannot determine the frame size or a corrupted frame was received.","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"3d221894-b5a9-4b68-99a5-881348ea61bc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.7587262+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\" in 414.4244ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":414.4244,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.7603779+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:53:11.9291846+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 599.4438ms","fields":{"ElapsedMilliseconds":599.4438,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jkl&Description=kl%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7913KECPDA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7913KECPDA"}}
{"@timestamp":"2024-10-10T08:57:18.8177236+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T08:57:18.9348041+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T08:57:18.9485550+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {40c9f25d-d934-4adf-9c85-c1930a08fdfa} with creation date 2024-10-10 08:57:18Z, activation date 2024-10-10 08:57:18Z, and expiration date 2025-01-08 08:57:18Z.","fields":{"KeyId":"40c9f25d-d934-4adf-9c85-c1930a08fdfa","CreationDate":"2024-10-10T08:57:18.9456970+00:00","ActivationDate":"2024-10-10T08:57:18.9421395+00:00","ExpirationDate":"2025-01-08T08:57:18.9421395+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{40c9f25d-d934-4adf-9c85-c1930a08fdfa}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 08:57:18Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 08:57:18Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 08:57:18Z"}]}}
{"@timestamp":"2024-10-10T08:57:18.9680804+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {40c9f25d-d934-4adf-9c85-c1930a08fdfa} may be persisted to storage in unencrypted form.","fields":{"KeyId":"40c9f25d-d934-4adf-9c85-c1930a08fdfa","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{40c9f25d-d934-4adf-9c85-c1930a08fdfa}"}]}}
{"@timestamp":"2024-10-10T08:57:19.3718970+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:57:19.3729017+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:57:19.3755247+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:57:19.3771411+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:57:19.3781486+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T08:57:19.7085529+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J67:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7916632J67"}}
{"@timestamp":"2024-10-10T08:57:19.8936815+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 186.7432ms","fields":{"ElapsedMilliseconds":186.7432,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J67:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7916632J67"}}
{"@timestamp":"2024-10-10T08:57:20.3483013+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J68:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7916632J68"}}
{"@timestamp":"2024-10-10T08:57:20.3791500+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J67:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7916632J67"}}
{"@timestamp":"2024-10-10T08:57:20.4302539+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 81.8522ms","fields":{"ElapsedMilliseconds":81.8522,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J68:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN7916632J68"}}
{"@timestamp":"2024-10-10T08:57:20.6266406+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 248.2436ms","fields":{"ElapsedMilliseconds":248.2436,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J67:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN7916632J67"}}
{"@timestamp":"2024-10-10T08:57:25.7632924+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J69"}}
{"@timestamp":"2024-10-10T08:57:25.7795803+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7916632J69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J69"}}
{"@timestamp":"2024-10-10T08:57:25.8181305+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 54.8665ms","fields":{"ElapsedMilliseconds":54.8665,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J69:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J69"}}
{"@timestamp":"2024-10-10T08:57:25.8372827+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:25.8415425+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.0369550+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:53:59', Current time (UTC): '10/10/2024 08:57:26'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.0824147+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:53:59', Current time (UTC): '10/10/2024 08:57:26'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:53:59', Current time (UTC): '10/10/2024 08:57:26'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.0869283+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.1100593+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"dfce5bc7-4b56-48a2-97f2-d840fb8517fc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.3161121+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"dfce5bc7-4b56-48a2-97f2-d840fb8517fc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.3304386+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"dfce5bc7-4b56-48a2-97f2-d840fb8517fc","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.3361390+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 221.5677ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":221.5677,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.3375034+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:26.3394470+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 502.1546ms","fields":{"ElapsedMilliseconds":502.1546,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6A:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN7916632J6A"}}
{"@timestamp":"2024-10-10T08:57:27.3518195+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6B:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6B"}}
{"@timestamp":"2024-10-10T08:57:27.3551411+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7916632J6B:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6B"}}
{"@timestamp":"2024-10-10T08:57:27.3566747+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 204 null null 4.8308ms","fields":{"ElapsedMilliseconds":4.8308,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6B:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6B"}}
{"@timestamp":"2024-10-10T08:57:27.3680660+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.3702742+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.3759626+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:53:59', Current time (UTC): '10/10/2024 08:57:27'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.3790710+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:53:59', Current time (UTC): '10/10/2024 08:57:27'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:53:59', Current time (UTC): '10/10/2024 08:57:27'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.3810268+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.3927152+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6c3750c2-5a5f-4ec9-b13a-ce3d3b43c7e0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.4502697+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6c3750c2-5a5f-4ec9-b13a-ce3d3b43c7e0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.4528026+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6c3750c2-5a5f-4ec9-b13a-ce3d3b43c7e0","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.4543655+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 60.5624ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":60.5624,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.4555570+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:27.4566642+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 200 null \"text/plain; charset=utf-8\" 88.5875ms","fields":{"ElapsedMilliseconds":88.5875,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6C:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6C"}}
{"@timestamp":"2024-10-10T08:57:44.0922098+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6D:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6D"}}
{"@timestamp":"2024-10-10T08:57:44.0941340+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7916632J6D:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6D"}}
{"@timestamp":"2024-10-10T08:57:44.0952477+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 204 null null 3.0389ms","fields":{"ElapsedMilliseconds":3.0389,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6D:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6D"}}
{"@timestamp":"2024-10-10T08:57:44.1027793+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.1038442+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.1209253+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.1278115+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6eec5eaf-697f-47e9-beb7-15759275c49b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.2713286+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"6eec5eaf-697f-47e9-beb7-15759275c49b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:57:44.2747239+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"6eec5eaf-697f-47e9-beb7-15759275c49b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T08:57:44.3087270+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The SSL connection could not be established, see inner exception.","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null},{"Depth":1,"ClassName":"System.Security.Authentication.AuthenticationException","Message":"The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","Source":"System.Private.CoreLib","StackTraceString":"   at System.Net.Security.SslStream.SendAuthResetSignal(ReadOnlySpan`1 alert, ExceptionDispatchInfo exception)\n   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)\n   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](Boolean receiveFirst, Byte[] reAuthenticationData, CancellationToken cancellationToken)\n   at System.Net.Http.ConnectHelper.EstablishSslConnectionAsync(SslClientAuthenticationOptions sslOptions, HttpRequestMessage request, Boolean async, Stream stream, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233087,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The SSL connection could not be established, see inner exception. AuthenticationException: The remote certificate is invalid according to the validation procedure: RemoteCertificateNameMismatch, RemoteCertificateChainErrors","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"6eec5eaf-697f-47e9-beb7-15759275c49b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.4343770+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 304.9965ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":304.9965,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.4355644+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T08:57:44.6111210+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 500 null \"application/json\" 508.2819ms","fields":{"ElapsedMilliseconds":508.2819,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN7916632J6E:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN7916632J6E"}}
{"@timestamp":"2024-10-10T09:02:54.0901334+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:02:54.1330851+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:02:54.1461295+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {7c6bc374-35b3-422e-9713-4c5f40ef2dc3} with creation date 2024-10-10 09:02:54Z, activation date 2024-10-10 09:02:54Z, and expiration date 2025-01-08 09:02:54Z.","fields":{"KeyId":"7c6bc374-35b3-422e-9713-4c5f40ef2dc3","CreationDate":"2024-10-10T09:02:54.1431967+00:00","ActivationDate":"2024-10-10T09:02:54.1401981+00:00","ExpirationDate":"2025-01-08T09:02:54.1401981+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{7c6bc374-35b3-422e-9713-4c5f40ef2dc3}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:02:54Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:02:54Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:02:54Z"}]}}
{"@timestamp":"2024-10-10T09:02:54.1634066+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {7c6bc374-35b3-422e-9713-4c5f40ef2dc3} may be persisted to storage in unencrypted form.","fields":{"KeyId":"7c6bc374-35b3-422e-9713-4c5f40ef2dc3","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{7c6bc374-35b3-422e-9713-4c5f40ef2dc3}"}]}}
{"@timestamp":"2024-10-10T09:02:54.4697983+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:02:54.4707753+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:02:54.4733916+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:02:54.4750650+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:02:54.4760113+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:02:54.8093344+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN79199V1IBU:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN79199V1IBU"}}
{"@timestamp":"2024-10-10T09:02:54.9478294+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 140.1142ms","fields":{"ElapsedMilliseconds":140.1142,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN79199V1IBU:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN79199V1IBU"}}
{"@timestamp":"2024-10-10T09:02:55.3702789+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN79199V1IBV:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN79199V1IBV"}}
{"@timestamp":"2024-10-10T09:02:55.3989858+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 28.6496ms","fields":{"ElapsedMilliseconds":28.6496,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN79199V1IBV:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN79199V1IBV"}}
{"@timestamp":"2024-10-10T09:02:55.4341183+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN79199V1IBU:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN79199V1IBU"}}
{"@timestamp":"2024-10-10T09:02:55.5779458+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 144.0993ms","fields":{"ElapsedMilliseconds":144.0993,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN79199V1IBU:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN79199V1IBU"}}
{"@timestamp":"2024-10-10T09:04:18.4637880+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:04:18.5097016+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:04:18.5226979+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {4142afef-bea1-42f1-b353-054da0c39023} with creation date 2024-10-10 09:04:18Z, activation date 2024-10-10 09:04:18Z, and expiration date 2025-01-08 09:04:18Z.","fields":{"KeyId":"4142afef-bea1-42f1-b353-054da0c39023","CreationDate":"2024-10-10T09:04:18.5197542+00:00","ActivationDate":"2024-10-10T09:04:18.5170301+00:00","ExpirationDate":"2025-01-08T09:04:18.5170301+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{4142afef-bea1-42f1-b353-054da0c39023}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:04:18Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:04:18Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:04:18Z"}]}}
{"@timestamp":"2024-10-10T09:04:18.5429176+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {4142afef-bea1-42f1-b353-054da0c39023} may be persisted to storage in unencrypted form.","fields":{"KeyId":"4142afef-bea1-42f1-b353-054da0c39023","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{4142afef-bea1-42f1-b353-054da0c39023}"}]}}
{"@timestamp":"2024-10-10T09:04:18.8535337+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:04:18.8546632+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:04:18.8582446+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:04:18.8597083+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:04:18.8607831+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:04:19.2405524+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791A33I0GO:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791A33I0GO"}}
{"@timestamp":"2024-10-10T09:04:19.3938009+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 156.9768ms","fields":{"ElapsedMilliseconds":156.9768,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791A33I0GO:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791A33I0GO"}}
{"@timestamp":"2024-10-10T09:04:19.8319433+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791A33I0GP:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791A33I0GP"}}
{"@timestamp":"2024-10-10T09:04:19.8539487+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 16.1543ms","fields":{"ElapsedMilliseconds":16.1543,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791A33I0GP:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791A33I0GP"}}
{"@timestamp":"2024-10-10T09:04:19.8895829+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791A33I0GO:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791A33I0GO"}}
{"@timestamp":"2024-10-10T09:04:20.0359193+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 146.9136ms","fields":{"ElapsedMilliseconds":146.9136,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791A33I0GO:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791A33I0GO"}}
{"@timestamp":"2024-10-10T09:06:35.9581878+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:06:36.0244461+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:06:36.0416403+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {5c3f12c3-77a0-462b-b68a-1ec0577d5963} with creation date 2024-10-10 09:06:36Z, activation date 2024-10-10 09:06:36Z, and expiration date 2025-01-08 09:06:36Z.","fields":{"KeyId":"5c3f12c3-77a0-462b-b68a-1ec0577d5963","CreationDate":"2024-10-10T09:06:36.0377922+00:00","ActivationDate":"2024-10-10T09:06:36.0339008+00:00","ExpirationDate":"2025-01-08T09:06:36.0339008+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{5c3f12c3-77a0-462b-b68a-1ec0577d5963}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:06:36Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:06:36Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:06:36Z"}]}}
{"@timestamp":"2024-10-10T09:06:36.0634436+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {5c3f12c3-77a0-462b-b68a-1ec0577d5963} may be persisted to storage in unencrypted form.","fields":{"KeyId":"5c3f12c3-77a0-462b-b68a-1ec0577d5963","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{5c3f12c3-77a0-462b-b68a-1ec0577d5963}"}]}}
{"@timestamp":"2024-10-10T09:06:36.4849983+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:06:36.4861325+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:06:36.4892646+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:06:36.4907320+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:06:36.4919258+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:06:36.8191574+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791BC46J3E:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791BC46J3E"}}
{"@timestamp":"2024-10-10T09:06:37.0482081+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 230.2276ms","fields":{"ElapsedMilliseconds":230.2276,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791BC46J3E:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791BC46J3E"}}
{"@timestamp":"2024-10-10T09:06:37.4415731+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791BC46J3F:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791BC46J3F"}}
{"@timestamp":"2024-10-10T09:06:37.4697430+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 28.3812ms","fields":{"ElapsedMilliseconds":28.3812,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791BC46J3F:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791BC46J3F"}}
{"@timestamp":"2024-10-10T09:06:37.5109079+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791BC46J3E:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791BC46J3E"}}
{"@timestamp":"2024-10-10T09:06:37.6804498+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 169.786ms","fields":{"ElapsedMilliseconds":169.786,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791BC46J3E:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791BC46J3E"}}
{"@timestamp":"2024-10-10T09:07:57.5909450+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:07:57.6350932+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:07:57.6471709+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {0a503890-8e96-4a93-a335-759688667eae} with creation date 2024-10-10 09:07:57Z, activation date 2024-10-10 09:07:57Z, and expiration date 2025-01-08 09:07:57Z.","fields":{"KeyId":"0a503890-8e96-4a93-a335-759688667eae","CreationDate":"2024-10-10T09:07:57.6446427+00:00","ActivationDate":"2024-10-10T09:07:57.6419420+00:00","ExpirationDate":"2025-01-08T09:07:57.6419420+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{0a503890-8e96-4a93-a335-759688667eae}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:07:57Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:07:57Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:07:57Z"}]}}
{"@timestamp":"2024-10-10T09:07:57.6641335+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {0a503890-8e96-4a93-a335-759688667eae} may be persisted to storage in unencrypted form.","fields":{"KeyId":"0a503890-8e96-4a93-a335-759688667eae","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{0a503890-8e96-4a93-a335-759688667eae}"}]}}
{"@timestamp":"2024-10-10T09:07:58.0149793+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:07:58.0162651+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:07:58.0189673+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:07:58.0204090+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:07:58.0215955+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:07:58.3819848+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENO:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791C4DQENO"}}
{"@timestamp":"2024-10-10T09:07:58.5257698+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 141.4749ms","fields":{"ElapsedMilliseconds":141.4749,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENO:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791C4DQENO"}}
{"@timestamp":"2024-10-10T09:07:58.9675965+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENP:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791C4DQENP"}}
{"@timestamp":"2024-10-10T09:07:58.9775004+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 10.2691ms","fields":{"ElapsedMilliseconds":10.2691,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENP:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791C4DQENP"}}
{"@timestamp":"2024-10-10T09:07:59.0089331+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENO:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791C4DQENO"}}
{"@timestamp":"2024-10-10T09:07:59.1303650+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 121.6923ms","fields":{"ElapsedMilliseconds":121.6923,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENO:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791C4DQENO"}}
{"@timestamp":"2024-10-10T09:08:40.4252469+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:40.5561187+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:40.5910066+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"cbbb1847-c5e9-444c-9026-2258a01d4f27","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:40.8519576+00:00","level":"Error","messageTemplate":"CarNotFound","message":"CarNotFound","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"cbbb1847-c5e9-444c-9026-2258a01d4f27","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:40.9638081+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 367.2913ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":367.2913,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:40.9665503+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:41.1705046+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 404 null \"application/json\" 745.4601ms","fields":{"ElapsedMilliseconds":745.4601,"StatusCode":404,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENQ:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENQ"}}
{"@timestamp":"2024-10-10T09:08:42.2060392+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENR"}}
{"@timestamp":"2024-10-10T09:08:42.2113565+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQENR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENR"}}
{"@timestamp":"2024-10-10T09:08:42.2151917+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 9.1313ms","fields":{"ElapsedMilliseconds":9.1313,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENR:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENR"}}
{"@timestamp":"2024-10-10T09:08:42.2242902+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.2265646+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.2832240+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:42'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3274122+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:42'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:42'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3282677+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3340172+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3680292+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3754472+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3785106+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 43.7325ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":43.7325,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3796648+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:42.3808131+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 156.5156ms","fields":{"ElapsedMilliseconds":156.5156,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQENS"}}
{"@timestamp":"2024-10-10T09:08:43.7235281+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:43.7319196+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:43.7390203+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"cbbb1847-c5e9-444c-9026-2258a01d4f27","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:43.8263891+00:00","level":"Error","messageTemplate":"CarNotFound","message":"CarNotFound","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"cbbb1847-c5e9-444c-9026-2258a01d4f27","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:44.0883128+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 326.1569ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":326.1569,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:44.0940252+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:44.1151345+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENU:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENU"}}
{"@timestamp":"2024-10-10T09:08:44.1617096+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQENU:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENU"}}
{"@timestamp":"2024-10-10T09:08:44.2107077+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 404 null \"application/json\" 487.2347ms","fields":{"ElapsedMilliseconds":487.2347,"StatusCode":404,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENT:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENT"}}
{"@timestamp":"2024-10-10T09:08:44.2107096+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 204 null null 95.5426ms","fields":{"ElapsedMilliseconds":95.5426,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENU:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENU"}}
{"@timestamp":"2024-10-10T09:08:44.2419287+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.2431989+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.2453824+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:44'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.2476737+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:44'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:44'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.2490042+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.2504762+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"cbbb1847-c5e9-444c-9026-2258a01d4f27","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.3018179+00:00","level":"Error","messageTemplate":"CarNotFound","message":"CarNotFound","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"cbbb1847-c5e9-444c-9026-2258a01d4f27","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.4416768+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 189.7937ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":189.7937,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.4436524+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:44.4694200+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670795f78c56bb4b7146d731\"\"\" - 404 null \"application/json\" 227.4814ms","fields":{"ElapsedMilliseconds":227.4814,"StatusCode":404,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670795f78c56bb4b7146d731","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQENV:00000001","RequestPath":"/api/cars/election/670795f78c56bb4b7146d731","ConnectionId":"0HN791C4DQENV"}}
{"@timestamp":"2024-10-10T09:08:45.3388664+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.3407779+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.3449099+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:45'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.3524326+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:45'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:45'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.3533752+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.3545075+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.4049517+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.4298262+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.4322649+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 76.8006ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":76.8006,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.4334731+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:45.4347014+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 95.7704ms","fields":{"ElapsedMilliseconds":95.7704,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO0:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO0"}}
{"@timestamp":"2024-10-10T09:08:46.1401618+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO1"}}
{"@timestamp":"2024-10-10T09:08:46.1418005+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQEO1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO1"}}
{"@timestamp":"2024-10-10T09:08:46.1438552+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 204 null null 3.6071ms","fields":{"ElapsedMilliseconds":3.6071,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO1:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO1"}}
{"@timestamp":"2024-10-10T09:08:46.1530663+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.1542055+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.1558988+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:46'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.1573534+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:46'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:46'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.1586194+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.1646704+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsRent\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsRent\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"fdf88603-920d-4d7c-8a37-17a464e643bf","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.1751249+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"fdf88603-920d-4d7c-8a37-17a464e643bf","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.2195744+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"fdf88603-920d-4d7c-8a37-17a464e643bf","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.2211050+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\" in 54.9386ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":54.9386,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.2218189+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsRentController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.2228989+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/rent\"\"\" - 200 null \"text/plain; charset=utf-8\" 69.7827ms","fields":{"ElapsedMilliseconds":69.7827,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/rent","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO2:00000001","RequestPath":"/api/cars/rent","ConnectionId":"0HN791C4DQEO2"}}
{"@timestamp":"2024-10-10T09:08:46.7181852+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.7197431+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.7217985+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:46'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.7243599+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:46'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 08:58:29', Current time (UTC): '10/10/2024 09:08:46'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.7252430+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.7268883+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.7749413+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.8222007+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"1ae45173-7fb8-46fa-b42a-bcdc33d1c891","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.8250966+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 97.3092ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":97.3092,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.8267486+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:08:46.8297055+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 111.5061ms","fields":{"ElapsedMilliseconds":111.5061,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791C4DQEO3:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791C4DQEO3"}}
{"@timestamp":"2024-10-10T09:09:52.2259629+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:09:52.2945795+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:09:52.3072584+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {711de251-e9a0-4f1b-a03c-e6d10616f2e0} with creation date 2024-10-10 09:09:52Z, activation date 2024-10-10 09:09:52Z, and expiration date 2025-01-08 09:09:52Z.","fields":{"KeyId":"711de251-e9a0-4f1b-a03c-e6d10616f2e0","CreationDate":"2024-10-10T09:09:52.3045825+00:00","ActivationDate":"2024-10-10T09:09:52.3016916+00:00","ExpirationDate":"2025-01-08T09:09:52.3016916+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{711de251-e9a0-4f1b-a03c-e6d10616f2e0}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:09:52Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:09:52Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:09:52Z"}]}}
{"@timestamp":"2024-10-10T09:09:52.3248995+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {711de251-e9a0-4f1b-a03c-e6d10616f2e0} may be persisted to storage in unencrypted form.","fields":{"KeyId":"711de251-e9a0-4f1b-a03c-e6d10616f2e0","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{711de251-e9a0-4f1b-a03c-e6d10616f2e0}"}]}}
{"@timestamp":"2024-10-10T09:09:52.7987371+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:09:52.7999110+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:09:52.8032339+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:09:52.8050315+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:09:52.8062267+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:09:53.1766208+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3F:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791D6KJP3F"}}
{"@timestamp":"2024-10-10T09:09:53.3889699+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 214.7104ms","fields":{"ElapsedMilliseconds":214.7104,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3F:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791D6KJP3F"}}
{"@timestamp":"2024-10-10T09:09:53.8424630+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3G:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791D6KJP3G"}}
{"@timestamp":"2024-10-10T09:09:53.8718669+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 29.2962ms","fields":{"ElapsedMilliseconds":29.2962,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3G:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791D6KJP3G"}}
{"@timestamp":"2024-10-10T09:09:53.8835018+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3F:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791D6KJP3F"}}
{"@timestamp":"2024-10-10T09:09:54.1605966+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 277.1074ms","fields":{"ElapsedMilliseconds":277.1074,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3F:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791D6KJP3F"}}
{"@timestamp":"2024-10-10T09:09:58.5958143+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.6939191+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.7221924+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.9224842+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.9315105+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.9368915+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 210.1887ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":210.1887,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.9387112+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:58.9406260+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 344.8369ms","fields":{"ElapsedMilliseconds":344.8369,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3H:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3H"}}
{"@timestamp":"2024-10-10T09:09:59.5727064+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.5825854+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.5864897+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.5969756+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.5988714+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.6009704+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 12.479ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":12.479,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.6022605+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.6050917+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 32.3993ms","fields":{"ElapsedMilliseconds":32.3993,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3I:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3I"}}
{"@timestamp":"2024-10-10T09:09:59.6425205+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3J:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3J"}}
{"@timestamp":"2024-10-10T09:09:59.6466048+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791D6KJP3J:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3J"}}
{"@timestamp":"2024-10-10T09:09:59.6496686+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 7.131ms","fields":{"ElapsedMilliseconds":7.131,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3J:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3J"}}
{"@timestamp":"2024-10-10T09:09:59.6589766+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.6606552+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.7529018+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:09:46', Current time (UTC): '10/10/2024 09:09:59'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8125264+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:09:46', Current time (UTC): '10/10/2024 09:09:59'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:09:46', Current time (UTC): '10/10/2024 09:09:59'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8140318+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8155019+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8514439+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8527163+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"8c7f2aed-4286-4630-8b1a-41ecec33e7fe","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8551368+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 35.9342ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":35.9342,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8560579+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:09:59.8574964+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 198.4977ms","fields":{"ElapsedMilliseconds":198.4977,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3K:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3K"}}
{"@timestamp":"2024-10-10T09:10:04.2847764+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3L:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3L"}}
{"@timestamp":"2024-10-10T09:10:04.2866853+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791D6KJP3L:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3L"}}
{"@timestamp":"2024-10-10T09:10:04.2880869+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 3.1705ms","fields":{"ElapsedMilliseconds":3.1705,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3L:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3L"}}
{"@timestamp":"2024-10-10T09:10:04.2954313+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryVxQWkPRMv8dwYAUc\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryVxQWkPRMv8dwYAUc","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:04.2966317+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:04.3015076+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:09:46', Current time (UTC): '10/10/2024 09:10:04'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:04.3041664+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:09:46', Current time (UTC): '10/10/2024 09:10:04'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:09:46', Current time (UTC): '10/10/2024 09:10:04'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:04.3102518+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:04.3162379+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:04.3175150+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 401 0 null 22.0582ms","fields":{"ElapsedMilliseconds":22.0582,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3M:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3M"}}
{"@timestamp":"2024-10-10T09:10:06.4192095+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundary9Elk8UTEEqSnjYv3\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundary9Elk8UTEEqSnjYv3","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.4209794+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.4379961+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.4453898+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"ad23dfb6-a1b6-4b1d-9adb-5c47d78abfe6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.5524066+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ElectionsCarService","ActionId":"ad23dfb6-a1b6-4b1d-9adb-5c47d78abfe6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.5919677+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"ad23dfb6-a1b6-4b1d-9adb-5c47d78abfe6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:10:06.5953227+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"ad23dfb6-a1b6-4b1d-9adb-5c47d78abfe6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:10:06.6379605+00:00","level":"Information","messageTemplate":"Error sending message.","message":"Error sending message.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpProtocolException","Message":"The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.Http2Connection.ThrowRequestAborted(Exception innerException)\n   at System.Net.Http.Http2Connection.Http2Stream.CheckResponseBodyState()\n   at System.Net.Http.Http2Connection.Http2Stream.TryEnsureHeaders()\n   at System.Net.Http.Http2Connection.Http2Stream.ReadResponseHeadersAsync(CancellationToken cancellationToken)\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146232800,"HelpURL":null}],"fields":{"EventId":{"Id":20,"Name":"ErrorSendingMessage"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/AddCar","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"ad23dfb6-a1b6-4b1d-9adb-5c47d78abfe6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:10:06.6518033+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Internal', Message: '\"Error starting gRPC call. HttpRequestException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError) HttpProtocolException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146232800,"HelpURL":null},{"Depth":1,"ClassName":"System.Net.Http.HttpProtocolException","Message":"The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.Http2Connection.ThrowRequestAborted(Exception innerException)\n   at System.Net.Http.Http2Connection.Http2Stream.CheckResponseBodyState()\n   at System.Net.Http.Http2Connection.Http2Stream.TryEnsureHeaders()\n   at System.Net.Http.Http2Connection.Http2Stream.ReadResponseHeadersAsync(CancellationToken cancellationToken)\n   at System.Net.Http.Http2Connection.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.PushUnaryContent`2.WriteMessageCore(Task writeMessageTask)\n   at System.Net.Http.Http2Connection.Http2Stream.SendRequestBodyAsync(CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146232800,"HelpURL":null}],"fields":{"StatusCode":"Internal","StatusMessage":"Error starting gRPC call. HttpRequestException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError) HttpProtocolException: The HTTP/2 server closed the connection. HTTP/2 error code 'HTTP_1_1_REQUIRED' (0xd). (HttpProtocolError)","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"ad23dfb6-a1b6-4b1d-9adb-5c47d78abfe6","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.7817987+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\" in 335.6977ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":335.6977,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.7832524+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:10:06.9494864+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 500 null \"application/json\" 530.2695ms","fields":{"ElapsedMilliseconds":530.2695,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=jk&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791D6KJP3N:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791D6KJP3N"}}
{"@timestamp":"2024-10-10T09:11:31.4635788+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:11:31.5085802+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:11:31.5227020+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {613da711-beed-439e-ae8a-162204af6443} with creation date 2024-10-10 09:11:31Z, activation date 2024-10-10 09:11:31Z, and expiration date 2025-01-08 09:11:31Z.","fields":{"KeyId":"613da711-beed-439e-ae8a-162204af6443","CreationDate":"2024-10-10T09:11:31.5198591+00:00","ActivationDate":"2024-10-10T09:11:31.5165951+00:00","ExpirationDate":"2025-01-08T09:11:31.5165951+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{613da711-beed-439e-ae8a-162204af6443}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:11:31Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:11:31Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:11:31Z"}]}}
{"@timestamp":"2024-10-10T09:11:31.5397178+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {613da711-beed-439e-ae8a-162204af6443} may be persisted to storage in unencrypted form.","fields":{"KeyId":"613da711-beed-439e-ae8a-162204af6443","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{613da711-beed-439e-ae8a-162204af6443}"}]}}
{"@timestamp":"2024-10-10T09:11:31.8693583+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:11:31.8705306+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:11:31.8739895+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:11:31.8757003+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:11:31.8768701+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:11:32.3268364+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1L:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791E45PS1L"}}
{"@timestamp":"2024-10-10T09:11:32.4501119+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 125.7428ms","fields":{"ElapsedMilliseconds":125.7428,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1L:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791E45PS1L"}}
{"@timestamp":"2024-10-10T09:11:32.8850127+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1M:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791E45PS1M"}}
{"@timestamp":"2024-10-10T09:11:32.8952550+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 10.1019ms","fields":{"ElapsedMilliseconds":10.1019,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1M:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791E45PS1M"}}
{"@timestamp":"2024-10-10T09:11:32.9332971+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1L:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791E45PS1L"}}
{"@timestamp":"2024-10-10T09:11:33.0660049+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 133.1408ms","fields":{"ElapsedMilliseconds":133.1408,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1L:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791E45PS1L"}}
{"@timestamp":"2024-10-10T09:11:37.1097268+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1N:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1N"}}
{"@timestamp":"2024-10-10T09:11:37.1153154+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1N:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1N"}}
{"@timestamp":"2024-10-10T09:11:37.1272910+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 17.6704ms","fields":{"ElapsedMilliseconds":17.6704,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1N:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1N"}}
{"@timestamp":"2024-10-10T09:11:37.1357835+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.1385593+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.2619713+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:37'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.3111434+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:37'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:37'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.3198972+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.3269751+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.3288701+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 401 0 null 193.0621ms","fields":{"ElapsedMilliseconds":193.0621,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1O:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1O"}}
{"@timestamp":"2024-10-10T09:11:37.6762332+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1P:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1P"}}
{"@timestamp":"2024-10-10T09:11:37.6789315+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1P:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1P"}}
{"@timestamp":"2024-10-10T09:11:37.6799905+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 3.7046ms","fields":{"ElapsedMilliseconds":3.7046,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1P:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1P"}}
{"@timestamp":"2024-10-10T09:11:37.6881046+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.6892079+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.6936594+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:37'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.6948843+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:37'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:37'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.6984414+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.7293112+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"c7e8f711-1a5f-4e7a-a542-d0e878784529","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.9617619+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"c7e8f711-1a5f-4e7a-a542-d0e878784529","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.9735977+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"c7e8f711-1a5f-4e7a-a542-d0e878784529","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.9789225+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 246.0011ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":246.0011,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.9809703+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:37.9830414+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 294.9311ms","fields":{"ElapsedMilliseconds":294.9311,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1Q:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791E45PS1Q"}}
{"@timestamp":"2024-10-10T09:11:38.7251584+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1R:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1R"}}
{"@timestamp":"2024-10-10T09:11:38.7282123+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1R:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1R"}}
{"@timestamp":"2024-10-10T09:11:38.7310326+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - 204 null null 5.8575ms","fields":{"ElapsedMilliseconds":5.8575,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1R:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1R"}}
{"@timestamp":"2024-10-10T09:11:38.7626426+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.7649403+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.7682052+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:38'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.7702848+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:38'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:11:06', Current time (UTC): '10/10/2024 09:11:38'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.7719361+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.7880577+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"29d7edc9-e341-4a92-908c-0d3288e244ad","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.8824089+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"29d7edc9-e341-4a92-908c-0d3288e244ad","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.8843829+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"29d7edc9-e341-4a92-908c-0d3288e244ad","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.8862997+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 95.1317ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":95.1317,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.8875512+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:38.8887270+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - 200 null \"text/plain; charset=utf-8\" 126.0548ms","fields":{"ElapsedMilliseconds":126.0548,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1S:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1S"}}
{"@timestamp":"2024-10-10T09:11:39.9242115+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:39.9253468+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:39.9386070+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:39.9452427+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsProcessing\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsProcessing\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"507253fc-6f67-4b7e-996c-d4c91b612a33","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:39.9574556+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"507253fc-6f67-4b7e-996c-d4c91b612a33","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:39.9810896+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"507253fc-6f67-4b7e-996c-d4c91b612a33","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:40.0036280+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\" in 57.0182ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":57.0182,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:40.0046252+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsProcessingController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:40.0055659+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 200 null \"text/plain; charset=utf-8\" 81.2676ms","fields":{"ElapsedMilliseconds":81.2676,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1T:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791E45PS1T"}}
{"@timestamp":"2024-10-10T09:11:41.1518224+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1U:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1U"}}
{"@timestamp":"2024-10-10T09:11:41.1529622+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1U:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1U"}}
{"@timestamp":"2024-10-10T09:11:41.1548782+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - 204 null null 3.0398ms","fields":{"ElapsedMilliseconds":3.0398,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1U:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1U"}}
{"@timestamp":"2024-10-10T09:11:41.1627306+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.1637105+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.1662036+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.1711982+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"24ef3bf6-ec6c-46e9-a31f-4f5c64d534df","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.3781437+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"24ef3bf6-ec6c-46e9-a31f-4f5c64d534df","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T09:11:41.3811416+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"http://modsen.server.carselections.api:8080/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"http://modsen.server.carselections.api:8080/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"24ef3bf6-ec6c-46e9-a31f-4f5c64d534df","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V","Scope":["HTTP POST http://modsen.server.carselections.api:8080/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T09:11:41.5128468+00:00","level":"Information","messageTemplate":"Call failed with gRPC error status. Status code: '{StatusCode}', Message: '{StatusMessage}'.","message":"Call failed with gRPC error status. Status code: 'Unavailable', Message: '\"Error starting gRPC call. HttpRequestException: Connection refused (modsen.server.carselections.api:5012) SocketException: Connection refused\"'.","exceptions":[{"Depth":0,"ClassName":"System.Net.Http.HttpRequestException","Message":"Connection refused (modsen.server.carselections.api:5012)","Source":"System.Net.Http","StackTraceString":"   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.AddHttp2ConnectionAsync(QueueItem queueItem)\n   at System.Threading.Tasks.TaskCompletionSourceWithCancellation`1.WaitWithCancellationAsync(CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\n   at System.Net.Http.DiagnosticsHandler.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Microsoft.Extensions.Http.Logging.LoggingScopeHttpMessageHandler.<SendCoreAsync>g__Core|5_0(HttpRequestMessage request, Boolean useAsync, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Balancer.Internal.BalancerHttpHandler.SendAsync(HttpRequestMessage request, CancellationToken cancellationToken)\n   at Grpc.Net.Client.Internal.GrpcCall`2.RunCall(HttpRequestMessage request, Nullable`1 timeout)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null},{"Depth":1,"ClassName":"System.Net.Sockets.SocketException","Message":"Connection refused","Source":"System.Net.Sockets","StackTraceString":"   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)\n   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|285_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)\n   at System.Net.Http.HttpConnectionPool.ConnectToTcpHostAsync(String host, Int32 port, HttpRequestMessage initialRequest, Boolean async, CancellationToken cancellationToken)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2147467259,"HelpURL":null}],"fields":{"StatusCode":"Unavailable","StatusMessage":"Error starting gRPC call. HttpRequestException: Connection refused (modsen.server.carselections.api:5012) SocketException: Connection refused","EventId":{"Id":3,"Name":"GrpcStatusError"},"SourceContext":"Grpc.Net.Client.Internal.GrpcCall","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"24ef3bf6-ec6c-46e9-a31f-4f5c64d534df","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.6429744+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 470.4309ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":470.4309,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.6443144+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:11:41.7856763+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/670799ee294711e55bb1543e\"\"\" - 500 null \"application/json\" 622.9364ms","fields":{"ElapsedMilliseconds":622.9364,"StatusCode":500,"ContentType":"application/json","ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/670799ee294711e55bb1543e","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791E45PS1V:00000001","RequestPath":"/api/cars/election/670799ee294711e55bb1543e","ConnectionId":"0HN791E45PS1V"}}
{"@timestamp":"2024-10-10T09:12:34.2506140+00:00","level":"Warning","messageTemplate":"Using an in-memory repository. Keys will not be persisted to storage.","message":"Using an in-memory repository. Keys will not be persisted to storage.","fields":{"EventId":{"Id":50,"Name":"UsingInMemoryRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.Repositories.EphemeralXmlRepository"}}
{"@timestamp":"2024-10-10T09:12:34.3236507+00:00","level":"Warning","messageTemplate":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","message":"Neither user profile nor HKLM registry available. Using an ephemeral key repository. Protected data will be unavailable when application exits.","fields":{"EventId":{"Id":59,"Name":"UsingEphemeralKeyRepository"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"}}
{"@timestamp":"2024-10-10T09:12:34.3359924+00:00","level":"Information","messageTemplate":"Creating key {KeyId:B} with creation date {CreationDate:u}, activation date {ActivationDate:u}, and expiration date {ExpirationDate:u}.","message":"Creating key {ad71c4de-9957-4c97-80bf-02f4fa6ad5ae} with creation date 2024-10-10 09:12:34Z, activation date 2024-10-10 09:12:34Z, and expiration date 2025-01-08 09:12:34Z.","fields":{"KeyId":"ad71c4de-9957-4c97-80bf-02f4fa6ad5ae","CreationDate":"2024-10-10T09:12:34.3331744+00:00","ActivationDate":"2024-10-10T09:12:34.3304505+00:00","ExpirationDate":"2025-01-08T09:12:34.3304505+00:00","EventId":{"Id":58,"Name":"CreatingKey"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{ad71c4de-9957-4c97-80bf-02f4fa6ad5ae}"}],"CreationDate":[{"Format":"u","Rendering":"2024-10-10 09:12:34Z"}],"ActivationDate":[{"Format":"u","Rendering":"2024-10-10 09:12:34Z"}],"ExpirationDate":[{"Format":"u","Rendering":"2025-01-08 09:12:34Z"}]}}
{"@timestamp":"2024-10-10T09:12:34.3526348+00:00","level":"Warning","messageTemplate":"No XML encryptor configured. Key {KeyId:B} may be persisted to storage in unencrypted form.","message":"No XML encryptor configured. Key {ad71c4de-9957-4c97-80bf-02f4fa6ad5ae} may be persisted to storage in unencrypted form.","fields":{"KeyId":"ad71c4de-9957-4c97-80bf-02f4fa6ad5ae","EventId":{"Id":35,"Name":"NoXMLEncryptorConfiguredKeyMayBePersistedToStorageInUnencryptedForm"},"SourceContext":"Microsoft.AspNetCore.DataProtection.KeyManagement.XmlKeyManager"},"renderings":{"KeyId":[{"Format":"B","Rendering":"{ad71c4de-9957-4c97-80bf-02f4fa6ad5ae}"}]}}
{"@timestamp":"2024-10-10T09:12:34.6536017+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"http://[::]:8080\"","fields":{"address":"http://[::]:8080","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:12:34.6546400+00:00","level":"Information","messageTemplate":"Now listening on: {address}","message":"Now listening on: \"https://[::]:8081\"","fields":{"address":"https://[::]:8081","EventId":{"Id":14,"Name":"ListeningOnAddress"},"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:12:34.6570734+00:00","level":"Information","messageTemplate":"Application started. Press Ctrl+C to shut down.","message":"Application started. Press Ctrl+C to shut down.","fields":{"SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:12:34.6583257+00:00","level":"Information","messageTemplate":"Hosting environment: {EnvName}","message":"Hosting environment: \"Development\"","fields":{"EnvName":"Development","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:12:34.6592709+00:00","level":"Information","messageTemplate":"Content root path: {ContentRoot}","message":"Content root path: \"/app\"","fields":{"ContentRoot":"/app","SourceContext":"Microsoft.Hosting.Lifetime"}}
{"@timestamp":"2024-10-10T09:12:34.9943717+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N2:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791EMRR7N2"}}
{"@timestamp":"2024-10-10T09:12:35.1941830+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 202.1802ms","fields":{"ElapsedMilliseconds":202.1802,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N2:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791EMRR7N2"}}
{"@timestamp":"2024-10-10T09:12:35.6320880+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N3:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791EMRR7N3"}}
{"@timestamp":"2024-10-10T09:12:35.6602794+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/index.html\"\"\" - 200 null \"text/html;charset=utf-8\" 28.1603ms","fields":{"ElapsedMilliseconds":28.1603,"StatusCode":200,"ContentType":"text/html;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/index.html","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N3:00000001","RequestPath":"/swagger/index.html","ConnectionId":"0HN791EMRR7N3"}}
{"@timestamp":"2024-10-10T09:12:35.6821663+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - null null","fields":{"Protocol":"HTTP/2","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N2:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791EMRR7N2"}}
{"@timestamp":"2024-10-10T09:12:35.8448582+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/2\" \"GET\" \"https\"://\"localhost:5010\"\"\"\"/swagger/v1/swagger.json\"\"\" - 200 null \"application/json;charset=utf-8\" 162.6995ms","fields":{"ElapsedMilliseconds":162.6995,"StatusCode":200,"ContentType":"application/json;charset=utf-8","ContentLength":null,"Protocol":"HTTP/2","Method":"GET","Scheme":"https","Host":"localhost:5010","PathBase":"","Path":"/swagger/v1/swagger.json","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N2:00000003","RequestPath":"/swagger/v1/swagger.json","ConnectionId":"0HN791EMRR7N2"}}
{"@timestamp":"2024-10-10T09:12:39.2799488+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N4:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N4"}}
{"@timestamp":"2024-10-10T09:12:39.2879090+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7N4:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N4"}}
{"@timestamp":"2024-10-10T09:12:39.3023456+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 204 null null 22.464ms","fields":{"ElapsedMilliseconds":22.464,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N4:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N4"}}
{"@timestamp":"2024-10-10T09:12:39.3314463+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.3346204+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.4896519+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:39'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.5409927+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:39'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:39'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.5494424+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.5563837+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.5589440+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/processing\"\"\" - 401 0 null 227.4533ms","fields":{"ElapsedMilliseconds":227.4533,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/processing","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N5:00000001","RequestPath":"/api/cars/processing","ConnectionId":"0HN791EMRR7N5"}}
{"@timestamp":"2024-10-10T09:12:39.9013381+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N6:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N6"}}
{"@timestamp":"2024-10-10T09:12:39.9061965+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7N6:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N6"}}
{"@timestamp":"2024-10-10T09:12:39.9078842+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 6.505ms","fields":{"ElapsedMilliseconds":6.505,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N6:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N6"}}
{"@timestamp":"2024-10-10T09:12:39.9182254+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:39.9196618+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:39.9241830+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:39'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:39.9260759+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:39'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:39'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:39.9301738+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:39.9613328+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:40.1791916+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:40.1874926+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:40.1939124+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 227.5983ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":227.5983,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:40.1958254+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:40.1972577+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 279.0217ms","fields":{"ElapsedMilliseconds":279.0217,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N7:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N7"}}
{"@timestamp":"2024-10-10T09:12:41.1971612+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.1997350+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.2010337+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.3088620+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.3102262+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.3114039+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 108.9051ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":108.9051,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.3123362+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.3131199+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 115.9855ms","fields":{"ElapsedMilliseconds":115.9855,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N8:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N8"}}
{"@timestamp":"2024-10-10T09:12:41.9741414+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:41.9768293+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:41.9782465+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:42.0492981+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:42.0516576+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:42.0537530+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 72.8037ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":72.8037,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:42.0606888+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:42.0628219+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 88.4947ms","fields":{"ElapsedMilliseconds":88.4947,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7N9:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7N9"}}
{"@timestamp":"2024-10-10T09:12:42.0971445+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1057210+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1079772+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:42'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1117957+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:42'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:42'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1142031+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1156755+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1954485+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.1995926+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.2032489+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 86.182ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":86.182,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.2056335+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:42.2072178+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 110.0427ms","fields":{"ElapsedMilliseconds":110.0427,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NA:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NA"}}
{"@timestamp":"2024-10-10T09:12:45.2184860+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NB:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NB"}}
{"@timestamp":"2024-10-10T09:12:45.2192599+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NB:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NB"}}
{"@timestamp":"2024-10-10T09:12:45.2201722+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 1.6718ms","fields":{"ElapsedMilliseconds":1.6718,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NB:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NB"}}
{"@timestamp":"2024-10-10T09:12:45.2483196+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryL1OAfhIMxL5MBbo8\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryL1OAfhIMxL5MBbo8","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:45.2494972+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:45.2544806+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:45'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:45.2557768+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:45'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:45'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:45.2588123+00:00","level":"Information","messageTemplate":"Authorization failed. {Reason}","message":"Authorization failed. \"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)\"","fields":{"Reason":"These requirements were not met:\nRolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Admin)","EventId":{"Id":2,"Name":"UserAuthorizationFailed"},"SourceContext":"Microsoft.AspNetCore.Authorization.DefaultAuthorizationService","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:45.2605915+00:00","level":"Information","messageTemplate":"AuthenticationScheme: {AuthenticationScheme} was challenged.","message":"AuthenticationScheme: \"Bearer\" was challenged.","fields":{"AuthenticationScheme":"Bearer","EventId":{"Id":12,"Name":"AuthenticationSchemeChallenged"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:45.2614733+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 401 0 null 13.0965ms","fields":{"ElapsedMilliseconds":13.0965,"StatusCode":401,"ContentType":null,"ContentLength":0,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=asd&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NC:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NC"}}
{"@timestamp":"2024-10-10T09:12:56.5469903+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7ND:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7ND"}}
{"@timestamp":"2024-10-10T09:12:56.5478954+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7ND:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7ND"}}
{"@timestamp":"2024-10-10T09:12:56.5490838+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 2.0915ms","fields":{"ElapsedMilliseconds":2.0915,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7ND:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7ND"}}
{"@timestamp":"2024-10-10T09:12:56.5760418+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.5777251+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.5794941+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:56'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.5811871+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:56'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:12:56'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.5821977+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.5831234+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.5922788+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.6151214+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.6178917+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 33.0434ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":33.0434,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.6190824+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:12:56.6202930+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 44.2173ms","fields":{"ElapsedMilliseconds":44.2173,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NE:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NE"}}
{"@timestamp":"2024-10-10T09:13:00.6011765+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6020579+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6028394+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6106110+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6353511+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6375589+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 33.9524ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":33.9524,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6393121+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:00.6402796+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 39.0937ms","fields":{"ElapsedMilliseconds":39.0937,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NF:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NF"}}
{"@timestamp":"2024-10-10T09:13:01.1802808+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.1818193+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.1828215+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.2765424+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.3010878+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.3233706+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 137.9862ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":137.9862,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.3284068+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.3289092+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.3313433+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 151.0461ms","fields":{"ElapsedMilliseconds":151.0461,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NG:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NG"}}
{"@timestamp":"2024-10-10T09:13:01.3328693+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.3375425+00:00","level":"Information","messageTemplate":"Failed to validate the token.","message":"Failed to validate the token.","exceptions":[{"Depth":0,"ClassName":"Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException","Message":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:13:01'.","Source":"Microsoft.IdentityModel.Tokens","StackTraceString":"   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateTokenPayloadAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)\n   at Microsoft.IdentityModel.JsonWebTokens.JsonWebTokenHandler.ValidateJWSAsync(JsonWebToken jsonWebToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)","RemoteStackTraceString":null,"RemoteStackIndex":0,"HResult":-2146233088,"HelpURL":null}],"fields":{"EventId":{"Id":1,"Name":"TokenValidationFailed"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.3405341+00:00","level":"Information","messageTemplate":"{AuthenticationScheme} was not authenticated. Failure message: {FailureMessage}","message":"\"Bearer\" was not authenticated. Failure message: \"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:13:01'.\"","fields":{"AuthenticationScheme":"Bearer","FailureMessage":"IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '10/10/2024 09:12:39', Current time (UTC): '10/10/2024 09:13:01'.","EventId":{"Id":7,"Name":"AuthenticationSchemeNotAuthenticatedWithFailure"},"SourceContext":"Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.3424804+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.3441172+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.4036916+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.4291537+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.4322008+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 82.9102ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":82.9102,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.4337609+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:01.4348951+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 105.9485ms","fields":{"ElapsedMilliseconds":105.9485,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NH:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NH"}}
{"@timestamp":"2024-10-10T09:13:06.1032671+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NI"}}
{"@timestamp":"2024-10-10T09:13:06.1047362+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NI"}}
{"@timestamp":"2024-10-10T09:13:06.1063041+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 3.0263ms","fields":{"ElapsedMilliseconds":3.0263,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NI:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NI"}}
{"@timestamp":"2024-10-10T09:13:06.1136231+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1145361+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1236800+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1246071+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1538871+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1774907+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1800464+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 54.0734ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":54.0734,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1808873+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:06.1817148+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 68.0884ms","fields":{"ElapsedMilliseconds":68.0884,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NJ:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NJ"}}
{"@timestamp":"2024-10-10T09:13:09.8752308+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NK"}}
{"@timestamp":"2024-10-10T09:13:09.8760775+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NK"}}
{"@timestamp":"2024-10-10T09:13:09.8770335+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 1.7894ms","fields":{"ElapsedMilliseconds":1.7894,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NK:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NK"}}
{"@timestamp":"2024-10-10T09:13:09.8839248+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - \"multipart/form-data; boundary=----WebKitFormBoundaryusEoFY2sXLxQtDyF\" 44","fields":{"Protocol":"HTTP/1.0","Method":"POST","ContentType":"multipart/form-data; boundary=----WebKitFormBoundaryusEoFY2sXLxQtDyF","ContentLength":44,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:09.8847993+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:09.8880848+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:09.8950978+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"AddCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"AddCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AddCar(Modsen.Server.CarsControl.Business.Models.Requests.AddCar)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:10.0083749+00:00","level":"Information","messageTemplate":"Add car","message":"Add car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.ElectionsCarService","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:10.0503196+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:13:10.0539838+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/AddCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:13:11.7283718+00:00","level":"Information","messageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","message":"Received HTTP response headers after 1670.8074ms - 200","fields":{"ElapsedMilliseconds":1670.8074,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:13:11.7301219+00:00","level":"Information","messageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","message":"End processing HTTP request after 1681.9938ms - 200","fields":{"ElapsedMilliseconds":1681.9938,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/AddCar","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/AddCar","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/AddCar"]}}
{"@timestamp":"2024-10-10T09:13:11.7477367+00:00","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 204","fields":{"StatusCode":204,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"8f47c3c8-a5a9-42d9-a7cb-71b2e6eaf19a","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:11.7485754+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\" in 1852.7602ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":1852.7602,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:11.7493827+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.AddCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:11.7502872+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"POST\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}\" - 204 null null 1866.34ms","fields":{"ElapsedMilliseconds":1866.34,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"POST","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"?Name=sad&Description=asd%20%20%20%20%20%20&Json={parametrs:[]}","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NL:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NL"}}
{"@timestamp":"2024-10-10T09:13:11.7953056+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NM"}}
{"@timestamp":"2024-10-10T09:13:11.7962198+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NM"}}
{"@timestamp":"2024-10-10T09:13:11.7971760+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 1.838ms","fields":{"ElapsedMilliseconds":1.838,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NM:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NM"}}
{"@timestamp":"2024-10-10T09:13:11.8041135+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8050111+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8059963+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8073923+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8462963+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8485180+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8494550+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 41.3505ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":41.3505,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8503272+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:11.8515951+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 47.4599ms","fields":{"ElapsedMilliseconds":47.4599,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NN:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NN"}}
{"@timestamp":"2024-10-10T09:13:15.8091186+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NO:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NO"}}
{"@timestamp":"2024-10-10T09:13:15.8101219+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NO:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NO"}}
{"@timestamp":"2024-10-10T09:13:15.8129154+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - 204 null null 3.6842ms","fields":{"ElapsedMilliseconds":3.6842,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NO:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NO"}}
{"@timestamp":"2024-10-10T09:13:15.8518941+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.8534038+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.8562718+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.8637582+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCar(System.String, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"740f333a-e4dc-49db-932d-6fb0913f298b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.9840026+00:00","level":"Information","messageTemplate":"Get car","message":"Get car","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"740f333a-e4dc-49db-932d-6fb0913f298b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.9852716+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"740f333a-e4dc-49db-932d-6fb0913f298b","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.9863133+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\" in 121.7655ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":121.7655,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.9874323+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:15.9893406+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - 200 null \"text/plain; charset=utf-8\" 137.424ms","fields":{"ElapsedMilliseconds":137.424,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NP:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NP"}}
{"@timestamp":"2024-10-10T09:13:17.2480852+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NQ:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NQ"}}
{"@timestamp":"2024-10-10T09:13:17.2489003+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NQ:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NQ"}}
{"@timestamp":"2024-10-10T09:13:17.2499378+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - 204 null null 1.8183ms","fields":{"ElapsedMilliseconds":1.8183,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NQ:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NQ"}}
{"@timestamp":"2024-10-10T09:13:17.2574854+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"DELETE","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.2587765+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.2608358+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.2651481+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"DeleteCar\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"DeleteCar\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteCar(System.String)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.3383912+00:00","level":"Information","messageTemplate":"Start processing HTTP request {HttpMethod} {Uri}","message":"Start processing HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestPipelineStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T09:13:17.3393454+00:00","level":"Information","messageTemplate":"Sending HTTP request {HttpMethod} {Uri}","message":"Sending HTTP request \"POST\" \"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar\"","fields":{"HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","EventId":{"Id":100,"Name":"RequestStart"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T09:13:17.6980251+00:00","level":"Information","messageTemplate":"Received HTTP response headers after {ElapsedMilliseconds}ms - {StatusCode}","message":"Received HTTP response headers after 357.2748ms - 200","fields":{"ElapsedMilliseconds":357.2748,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestEnd"},"SourceContext":"System.Net.Http.HttpClient.CarClient.ClientHandler","HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T09:13:17.6990415+00:00","level":"Information","messageTemplate":"End processing HTTP request after {ElapsedMilliseconds}ms - {StatusCode}","message":"End processing HTTP request after 360.6511ms - 200","fields":{"ElapsedMilliseconds":360.6511,"StatusCode":200,"EventId":{"Id":101,"Name":"RequestPipelineEnd"},"SourceContext":"System.Net.Http.HttpClient.CarClient.LogicalHandler","HttpMethod":"POST","Uri":"https://modsen.server.carselections.api:8081/greet.Car/DeleteCar","GrpcMethodType":"Unary","GrpcUri":"/greet.Car/DeleteCar","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR","Scope":["HTTP POST https://modsen.server.carselections.api:8081/greet.Car/DeleteCar"]}}
{"@timestamp":"2024-10-10T09:13:17.7001723+00:00","level":"Information","messageTemplate":"Car deleted","message":"Car deleted","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.7013288+00:00","level":"Information","messageTemplate":"Executing StatusCodeResult, setting HTTP status code {StatusCode}","message":"Executing StatusCodeResult, setting HTTP status code 204","fields":{"StatusCode":204,"EventId":{"Id":1,"Name":"HttpStatusCodeResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.StatusCodeResult","ActionId":"47541f20-28b6-44c0-8480-fa0cbecc3744","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.7021553+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\" in 436.2219ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":436.2219,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.7032513+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.DeleteCar (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.7040688+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"DELETE\" \"https\"://\"cars_control\"\"\"\"/api/cars/election/67079aa5022a480abfce561b\"\"\" - 204 null null 446.5527ms","fields":{"ElapsedMilliseconds":446.5527,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"DELETE","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election/67079aa5022a480abfce561b","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NR:00000001","RequestPath":"/api/cars/election/67079aa5022a480abfce561b","ConnectionId":"0HN791EMRR7NR"}}
{"@timestamp":"2024-10-10T09:13:17.7465177+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"OPTIONS","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NS"}}
{"@timestamp":"2024-10-10T09:13:17.7473784+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NS"}}
{"@timestamp":"2024-10-10T09:13:17.7482827+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"OPTIONS\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 204 null null 1.7217ms","fields":{"ElapsedMilliseconds":1.7217,"StatusCode":204,"ContentType":null,"ContentLength":null,"Protocol":"HTTP/1.0","Method":"OPTIONS","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NS:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NS"}}
{"@timestamp":"2024-10-10T09:13:17.7548998+00:00","level":"Information","messageTemplate":"Request starting {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {ContentType} {ContentLength}","message":"Request starting \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - null null","fields":{"Protocol":"HTTP/1.0","Method":"GET","ContentType":null,"ContentLength":null,"Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":1},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7561555+00:00","level":"Information","messageTemplate":"CORS policy execution successful.","message":"CORS policy execution successful.","fields":{"EventId":{"Id":4,"Name":"PolicySuccess"},"SourceContext":"Microsoft.AspNetCore.Cors.Infrastructure.CorsService","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7571341+00:00","level":"Information","messageTemplate":"Executing endpoint '{EndpointName}'","message":"Executing endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Name":"ExecutingEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7579124+00:00","level":"Information","messageTemplate":"Route matched with {RouteData}. Executing controller action with signature {MethodInfo} on controller {Controller} ({AssemblyName}).","message":"Route matched with \"{action = \\\"GetCars\\\", controller = \\\"CarsElection\\\"}\". Executing controller action with signature \"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)\" on controller \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController\" (\"Modsen.Server.CarsControl.Api\").","fields":{"RouteData":"{action = \"GetCars\", controller = \"CarsElection\"}","MethodInfo":"System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetCars(Int32, Int32, System.Threading.CancellationToken)","Controller":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController","AssemblyName":"Modsen.Server.CarsControl.Api","EventId":{"Id":102,"Name":"ControllerActionExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7644862+00:00","level":"Information","messageTemplate":"Get cars","message":"Get cars","fields":{"SourceContext":"Modsen.Server.CarsControl.Business.Services.Base.CarServiceBase","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7681810+00:00","level":"Information","messageTemplate":"Executing {ObjectResultType}, writing value of type '{Type}'.","message":"Executing \"OkObjectResult\", writing value of type '\"System.String\"'.","fields":{"ObjectResultType":"OkObjectResult","Type":"System.String","EventId":{"Id":1,"Name":"ObjectResultExecuting"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ObjectResultExecutor","ActionId":"6e7566d8-747d-4e7d-bca9-e98e4824cd98","ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7697460+00:00","level":"Information","messageTemplate":"Executed action {ActionName} in {ElapsedMilliseconds}ms","message":"Executed action \"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\" in 11.0436ms","fields":{"ActionName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","ElapsedMilliseconds":11.0436,"EventId":{"Id":105,"Name":"ActionExecuted"},"SourceContext":"Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7711643+00:00","level":"Information","messageTemplate":"Executed endpoint '{EndpointName}'","message":"Executed endpoint '\"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)\"'","fields":{"EndpointName":"Modsen.Server.CarsControl.Api.Controllers.CarsElectionController.GetCars (Modsen.Server.CarsControl.Api)","EventId":{"Id":1,"Name":"ExecutedEndpoint"},"SourceContext":"Microsoft.AspNetCore.Routing.EndpointMiddleware","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
{"@timestamp":"2024-10-10T09:13:17.7719844+00:00","level":"Information","messageTemplate":"Request finished {Protocol} {Method} {Scheme}://{Host}{PathBase}{Path}{QueryString} - {StatusCode} {ContentLength} {ContentType} {ElapsedMilliseconds}ms","message":"Request finished \"HTTP/1.0\" \"GET\" \"https\"://\"cars_control\"\"\"\"/api/cars/election\"\"\" - 200 null \"text/plain; charset=utf-8\" 17.0697ms","fields":{"ElapsedMilliseconds":17.0697,"StatusCode":200,"ContentType":"text/plain; charset=utf-8","ContentLength":null,"Protocol":"HTTP/1.0","Method":"GET","Scheme":"https","Host":"cars_control","PathBase":"","Path":"/api/cars/election","QueryString":"","EventId":{"Id":2},"SourceContext":"Microsoft.AspNetCore.Hosting.Diagnostics","RequestId":"0HN791EMRR7NT:00000001","RequestPath":"/api/cars/election","ConnectionId":"0HN791EMRR7NT"}}
